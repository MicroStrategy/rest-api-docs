"use strict";(self.webpackChunkrest_api_docs=self.webpackChunkrest_api_docs||[]).push([[9328],{70852:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var t=o(74848),s=o(28453);const a={title:"Convert connection string from data source name(DSN) to DSN-less for a datasource",description:"This workflow sample demonstrates how to convert connection string from DSN to DSN-less for a database source, or a datasource connection."},i=void 0,c={id:"common-workflows/administration/datasource-management/convert-connection-string-from-dsn-to-dsnless-for-a-datasource",title:"Convert connection string from data source name(DSN) to DSN-less for a datasource",description:"This workflow sample demonstrates how to convert connection string from DSN to DSN-less for a database source, or a datasource connection.",source:"@site/docs/common-workflows/administration/datasource-management/convert-connection-string-from-dsn-to-dsnless-for-a-datasource.md",sourceDirName:"common-workflows/administration/datasource-management",slug:"/common-workflows/administration/datasource-management/convert-connection-string-from-dsn-to-dsnless-for-a-datasource",permalink:"/rest-api-docs/common-workflows/administration/datasource-management/convert-connection-string-from-dsn-to-dsnless-for-a-datasource",draft:!1,unlisted:!1,editUrl:"https://github.com/MicroStrategy/rest-api-docs/tree/public/docs/common-workflows/administration/datasource-management/convert-connection-string-from-dsn-to-dsnless-for-a-datasource.md",tags:[],version:"current",lastUpdatedBy:"AugLychee",lastUpdatedAt:1710818077,formattedLastUpdatedAt:"Mar 19, 2024",frontMatter:{title:"Convert connection string from data source name(DSN) to DSN-less for a datasource",description:"This workflow sample demonstrates how to convert connection string from DSN to DSN-less for a database source, or a datasource connection."},sidebar:"tutorialSidebar",previous:{title:"Modify value of an advanced property",permalink:"/rest-api-docs/common-workflows/administration/datasource-management/update-datasource-advanced-property"},next:{title:"Manage gateways",permalink:"/rest-api-docs/common-workflows/administration/manage-gateways/"}},r={},d=[{value:"Convert for a database source",id:"convert-for-a-database-source",level:2},{value:"Step 1: Use the <code>GET /api/datasources/{datasourceId}</code> API call to get the datasource definition",id:"step-1-use-the-get-apidatasourcesdatasourceid-api-call-to-get-the-datasource-definition",level:3},{value:"Step 2: Use the <code>POST /api/datasources/{datasourceId}/conversion</code> API call to convert",id:"step-2-use-the-post-apidatasourcesdatasourceidconversion-api-call-to-convert",level:3},{value:"Step 3: Use the GET <code>/api/datasources/{datasourceId}</code> API call to get the datasource definition again",id:"step-3-use-the-get-apidatasourcesdatasourceid-api-call-to-get-the-datasource-definition-again",level:3},{value:"Convert for a datasource connection",id:"convert-for-a-datasource-connection",level:2},{value:"Step 1: Use the <code>GET /api/datasources/connections/{connectionId}</code> API call to get the datasource connection definition",id:"step-1-use-the-get-apidatasourcesconnectionsconnectionid-api-call-to-get-the-datasource-connection-definition",level:3},{value:"Step 2: Use the <code>POST /api/datasources/connections/{connectionId}/conversion</code> API call to convert",id:"step-2-use-the-post-apidatasourcesconnectionsconnectionidconversion-api-call-to-convert",level:3},{value:"Step 3: Use the GET <code>/api/datasources/connections/{connectionId}</code> API call to get the datasource connection definition again",id:"step-3-use-the-get-apidatasourcesconnectionsconnectionid-api-call-to-get-the-datasource-connection-definition-again",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components},{Available:o}=n;return o||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Available",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o,{since:"2021 Update 8"}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsxs)(n.p,{children:["You can try out this workflow at ",(0,t.jsx)(n.a,{href:"https://www.postman.com/microstrategysdk/workspace/microstrategy-rest-api/folder/16131298-737e03ad-a41a-46d5-bf7a-00e68963b08b?ctx=documentation",children:"REST API Playground"}),"."]}),(0,t.jsxs)(n.p,{children:["Learn more about MicroStrategy REST API Playground ",(0,t.jsx)(n.a,{href:"/rest-api-docs/getting-started/playground",children:"here"}),"."]})]}),"\n",(0,t.jsx)(n.p,{children:"This workflow sample demonstrates how to convert connection string from DSN to DSN-less for a database source, or a datasource connection."}),"\n",(0,t.jsx)(n.p,{children:"A detailed description of each step is listed down below."}),"\n",(0,t.jsx)(n.h2,{id:"convert-for-a-database-source",children:"Convert for a database source"}),"\n",(0,t.jsxs)(n.p,{children:["Endpoint: ",(0,t.jsx)(n.a,{href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Datasource%20Management/datasourceConversion",children:"POST /api/datasources/{datasourceId}/conversion"})]}),"\n",(0,t.jsxs)(n.p,{children:["This endpoint allows the caller to convert for a database source with a embedded database connection. You use the authorization token returned during login as the value for ",(0,t.jsx)(n.code,{children:"X-MSTR-AuthToken"}),". You can find the ",(0,t.jsx)(n.code,{children:"datasourceId"})," using the endpoint ",(0,t.jsx)(n.code,{children:"GET /api/datasources"}),". If the call is successful, the resulting HTTP response returns an HTTP status code 204."]}),"\n",(0,t.jsxs)(n.h3,{id:"step-1-use-the-get-apidatasourcesdatasourceid-api-call-to-get-the-datasource-definition",children:["Step 1: Use the ",(0,t.jsx)(n.code,{children:"GET /api/datasources/{datasourceId}"})," API call to get the datasource definition"]}),"\n",(0,t.jsxs)(n.p,{children:["If the value for ",(0,t.jsx)(n.code,{children:"database/connection/isEmbedded"})," is true, you should be able to see the definition of the embedded connection(",(0,t.jsx)(n.code,{children:"database/embeddedConnection"}),"). If it's false, please use ",(0,t.jsx)(n.a,{href:"#convert-for-a-datasource-connection",children:"Convert for a datasource connection"})," for the standalone datasource connection."]}),"\n",(0,t.jsxs)(n.p,{children:["Then you can check the connection string(",(0,t.jsx)(n.code,{children:"database/embeddedConnection/connectionString"}),") of the embedded connection you want to convert to see the DSN inside this database source before conversion."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"connectionString": "DSN=postgres_win;"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Sample Request"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Request Headers"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:'"Accept: application/json"\n"X-MSTR-AuthToken: nllmm5lpmkjdsj4d4etgdikc6c"\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Sample Response"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Response Body"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "id": "683E35DC47E33C3086A0EEB8F0C3F1E5",\n  "name": "postgres_dsn",\n  "description": "",\n  "dateCreated": "2022-11-10T10:35:20.000+0000",\n  "dateModified": "2022-11-24T07:39:35.000+0000",\n  "acg": 255,\n  "datasourceType": "data_import",\n  "database": {\n    "type": "postgre_sql",\n    "version": "postgre_sql_90",\n    "connection": {\n      "name": "postgres_dsn.conn",\n      "id": "C329607743675E3DE8785F917C8B0EBB",\n      "isEmbedded": true\n    },\n    "embeddedConnection": {\n      "name": "postgres_dsn.conn",\n      "id": "C329607743675E3DE8785F917C8B0EBB",\n      "description": "",\n      "acg": 0,\n      "executionMode": "synchronous",\n      "maxCancelAttemptTime": 60,\n      "maxQueryExeTime": -1,\n      "maxConnectionAttemptTime": 60,\n      "connectionLifetime": 36000,\n      "connectionIdleTimeout": 60,\n      "charEncodingWindows": "multibyte",\n      "charEncodingUnix": "utf8",\n      "tablePrefix": "",\n      "connectionString": "DSN=postgres_win;",\n      "parameterizedQueries": false,\n      "extendedFetch": false,\n      "login": {\n        "name": "postgres_dsn.login",\n        "id": "B6FD3ADA4867346E60EE5FAAB15B8471",\n        "isEmbedded": true\n      },\n      "embeddedLogin": {\n        "name": "postgres_dsn.login",\n        "id": "B6FD3ADA4867346E60EE5FAAB15B8471",\n        "description": "",\n        "dateCreated": "1970-01-01T00:00:00.000+0000",\n        "dateModified": "1970-01-01T00:00:00.000+0000",\n        "acg": 0,\n        "username": "abc"\n      },\n      "driverType": "odbc",\n      "oauthParameter": "",\n      "walletInfo": "",\n      "iam": {},\n      "resource": "",\n      "scope": "",\n      "enableSso": false\n    }\n  },\n  "tablePrefix": "",\n  "odbcVersion": "version3x",\n  "intermediateStoreDbName": "",\n  "intermediateStoreTableSpaceName": "",\n  "dbms": {\n    "name": "PostgreSQL",\n    "id": "702780F3E3594D95AD4C85CE8F803306"\n  },\n  "owner": {\n    "name": "Administrator",\n    "id": "54F3D26011D2896560009A8E67019608"\n  },\n  "hidden": false\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"step-2-use-the-post-apidatasourcesdatasourceidconversion-api-call-to-convert",children:["Step 2: Use the ",(0,t.jsx)(n.code,{children:"POST /api/datasources/{datasourceId}/conversion"})," API call to convert"]}),"\n",(0,t.jsxs)(n.p,{children:["This call will convert the DSN in the connection string(",(0,t.jsx)(n.code,{children:"database/embeddedConnection/connectionString"}),") to DSN-less format connection string."]}),"\n",(0,t.jsx)(n.p,{children:"Sample Request"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Request Header:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:'"Accept: application/json"\n"X-MSTR-AuthToken: nllmm5lpmkjdsj4d4etgdikc6c"\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Sample Response"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Response Code: 204"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"step-3-use-the-get-apidatasourcesdatasourceid-api-call-to-get-the-datasource-definition-again",children:["Step 3: Use the GET ",(0,t.jsx)(n.code,{children:"/api/datasources/{datasourceId}"})," API call to get the datasource definition again"]}),"\n",(0,t.jsx)(n.p,{children:"After conversion, you should be able to see the DSN-less format connection string in the response by calling the API to get the datasource definition."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"connectionString": "DRIVER={MicroStrategy ODBC Driver for PostgreSQL Wire Protocol};APPLICATIONUSINGTHREADS=1;DATABASE=test;DEFAULTLONGDATABUFFLEN=1024;DESCRIPTION=MicroStrategy ODBC Driver for PostgreSQL Wire Protocol;ENABLEDESCRIBEPARAM=1;ENCRYPTIONMETHOD=1;FETCHTSWTZASTIMESTAMP=1;FETCHTWFSASTIME=1;HOSTNAME=xx.xx.xx.xx;HOSTNAMEINCERTIFICATE=xx.xx.xx.xx;PORTNUMBER=5432;TRANSACTIONERRORBEHAVIOR=0;UID=uid;VALIDATESERVERCERTIFICATE=1;XMLDESCRIBETYPE=-10;"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Sample Request"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Request Headers"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:'"Accept: application/json"\n"X-MSTR-AuthToken: nllmm5lpmkjdsj4d4etgdikc6c"\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Sample Response"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Response Body"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "id": "683E35DC47E33C3086A0EEB8F0C3F1E5",\n  "name": "postgres_dsn",\n  "description": "",\n  "dateCreated": "2022-11-10T10:35:20.000+0000",\n  "dateModified": "2022-11-24T07:39:35.000+0000",\n  "acg": 255,\n  "datasourceType": "data_import",\n  "database": {\n    "type": "postgre_sql",\n    "version": "postgre_sql_90",\n    "connection": {\n      "name": "postgres_dsn.conn",\n      "id": "C329607743675E3DE8785F917C8B0EBB",\n      "isEmbedded": true\n    },\n    "embeddedConnection": {\n      "name": "postgres_dsn.conn",\n      "id": "C329607743675E3DE8785F917C8B0EBB",\n      "description": "",\n      "acg": 0,\n      "executionMode": "synchronous",\n      "maxCancelAttemptTime": 60,\n      "maxQueryExeTime": -1,\n      "maxConnectionAttemptTime": 60,\n      "connectionLifetime": 36000,\n      "connectionIdleTimeout": 60,\n      "charEncodingWindows": "multibyte",\n      "charEncodingUnix": "utf8",\n      "tablePrefix": "",\n      "connectionString": "DRIVER={MicroStrategy ODBC Driver for PostgreSQL Wire Protocol};APPLICATIONUSINGTHREADS=1;DATABASE=test;DEFAULTLONGDATABUFFLEN=1024;DESCRIPTION=MicroStrategy ODBC Driver for PostgreSQL Wire Protocol;ENABLEDESCRIBEPARAM=1;ENCRYPTIONMETHOD=1;FETCHTSWTZASTIMESTAMP=1;FETCHTWFSASTIME=1;HOSTNAME=xx.xx.xx.xx;HOSTNAMEINCERTIFICATE=xx.xx.xx.xx;PORTNUMBER=5432;TRANSACTIONERRORBEHAVIOR=0;UID=uid;VALIDATESERVERCERTIFICATE=1;XMLDESCRIBETYPE=-10;",\n      "parameterizedQueries": false,\n      "extendedFetch": false,\n      "login": {\n        "name": "postgres_dsn.login",\n        "id": "B6FD3ADA4867346E60EE5FAAB15B8471",\n        "isEmbedded": true\n      },\n      "embeddedLogin": {\n        "name": "postgres_dsn.login",\n        "id": "B6FD3ADA4867346E60EE5FAAB15B8471",\n        "description": "",\n        "dateCreated": "1970-01-01T00:00:00.000+0000",\n        "dateModified": "1970-01-01T00:00:00.000+0000",\n        "acg": 0,\n        "username": "abc"\n      },\n      "driverType": "odbc",\n      "oauthParameter": "",\n      "walletInfo": "",\n      "iam": {},\n      "resource": "",\n      "scope": "",\n      "enableSso": false\n    }\n  },\n  "tablePrefix": "",\n  "odbcVersion": "version3x",\n  "intermediateStoreDbName": "",\n  "intermediateStoreTableSpaceName": "",\n  "dbms": {\n    "name": "PostgreSQL",\n    "id": "702780F3E3594D95AD4C85CE8F803306"\n  },\n  "owner": {\n    "name": "Administrator",\n    "id": "54F3D26011D2896560009A8E67019608"\n  },\n  "hidden": false\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"convert-for-a-datasource-connection",children:"Convert for a datasource connection"}),"\n",(0,t.jsxs)(n.p,{children:["Endpoint: ",(0,t.jsx)(n.a,{href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Datasource%20Management/datasourceConnectionConversion",children:"POST /api/datasources/connections/{connectionId}/conversion"})]}),"\n",(0,t.jsxs)(n.p,{children:["This endpoint allows the caller to convert for a standalone datasource connection. You use the authorization token returned during login as the value for ",(0,t.jsx)(n.code,{children:"X-MSTR-AuthToken"}),". You can find the ",(0,t.jsx)(n.code,{children:"connectionId"})," using the endpoint ",(0,t.jsx)(n.code,{children:"GET /api/datasources/connections"}),". If the call is successful, the resulting HTTP response returns an HTTP status code 204."]}),"\n",(0,t.jsxs)(n.h3,{id:"step-1-use-the-get-apidatasourcesconnectionsconnectionid-api-call-to-get-the-datasource-connection-definition",children:["Step 1: Use the ",(0,t.jsx)(n.code,{children:"GET /api/datasources/connections/{connectionId}"})," API call to get the datasource connection definition"]}),"\n",(0,t.jsxs)(n.p,{children:["You can check the connection string(",(0,t.jsx)(n.code,{children:"connectionString"}),") of the embedded datasource connection you want to convert to see the DSN inside this datasource connection before conversion."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"connectionString": "DSN=sqlserver_win;"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Sample Request"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Request Headers"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:'"Accept: application/json"\n"X-MSTR-AuthToken: nllmm5lpmkjdsj4d4etgdikc6c"\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Sample Response"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Response Body"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "name": "sqlserver_dsn",\n  "id": "6D34D3DE4CDCB0638BE3AF876B8E11DD",\n  "description": "",\n  "acg": 0,\n  "executionMode": "synchronous",\n  "maxCancelAttemptTime": 60,\n  "maxQueryExeTime": -1,\n  "maxConnectionAttemptTime": 6000,\n  "connectionLifetime": 36000,\n  "connectionIdleTimeout": 60,\n  "charEncodingWindows": "multibyte",\n  "charEncodingUnix": "utf8",\n  "tablePrefix": "",\n  "connectionString": "DSN=sqlserver_win;",\n  "parameterizedQueries": true,\n  "extendedFetch": false,\n  "database": {\n    "login": {\n      "id": "40B2C4E84D717B49FF8A4192493484E7",\n      "name": "sqlserver_dsn_login"\n    },\n    "type": "sql_server",\n    "version": "default"\n  },\n  "driverType": "odbc",\n  "oauthParameter": "",\n  "walletInfo": "",\n  "iam": {},\n  "resource": "",\n  "scope": "",\n  "enableSso": false\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"step-2-use-the-post-apidatasourcesconnectionsconnectionidconversion-api-call-to-convert",children:["Step 2: Use the ",(0,t.jsx)(n.code,{children:"POST /api/datasources/connections/{connectionId}/conversion"})," API call to convert"]}),"\n",(0,t.jsxs)(n.p,{children:["This call will convert the DSN in the connection string(",(0,t.jsx)(n.code,{children:"connectionString"}),") to DSN-less format connection string."]}),"\n",(0,t.jsx)(n.p,{children:"Sample Request"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Request Header:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:'"Accept: application/json"\n"X-MSTR-AuthToken: nllmm5lpmkjdsj4d4etgdikc6c"\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Sample Response"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Response Code: 204"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"step-3-use-the-get-apidatasourcesconnectionsconnectionid-api-call-to-get-the-datasource-connection-definition-again",children:["Step 3: Use the GET ",(0,t.jsx)(n.code,{children:"/api/datasources/connections/{connectionId}"})," API call to get the datasource connection definition again"]}),"\n",(0,t.jsx)(n.p,{children:"After conversion, you should be able to see the DSN-less format connection string in the response by calling the API to get the datasource connection definition."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"connectionString": "DRIVER={MicroStrategy ODBC Driver for SQL Server Wire Protocol};DATABASE=tpch;HOSTNAME=10.27.69.102;KEEPALIVE=0;KEEPCONNECTIONACTIVE=0;LOADBALANCETIMEOUT=0;LOADBALANCING=0;LOGINTIMEOUT=15;MAXPOOLSIZE=100;MINPOOLSIZE=0;MULTISUBNETFAILOVER=0 - FALSE;PORTNUMBER=1433;PROXYMODE=0;QUERYTIMEOUT=0;REPORTCODEPAGECONVERSIONERRORS=0;SNAPSHOTSERIALIZABLE=0;SOCKETIDLETIMECHECKINTERVAL=1500;VALIDATESERVERCERTIFICATE=1;XMLDESCRIBETYPE=-10;"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Sample Request"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Request Headers"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:'"Accept: application/json"\n"X-MSTR-AuthToken: nllmm5lpmkjdsj4d4etgdikc6c"\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Sample Response"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Response Body"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "name": "sqlserver_dsn",\n  "id": "6D34D3DE4CDCB0638BE3AF876B8E11DD",\n  "description": "",\n  "acg": 0,\n  "executionMode": "synchronous",\n  "maxCancelAttemptTime": 60,\n  "maxQueryExeTime": -1,\n  "maxConnectionAttemptTime": 6000,\n  "connectionLifetime": 36000,\n  "connectionIdleTimeout": 60,\n  "charEncodingWindows": "multibyte",\n  "charEncodingUnix": "utf8",\n  "tablePrefix": "",\n  "connectionString": "DRIVER={MicroStrategy ODBC Driver for SQL Server Wire Protocol};DATABASE=tpch;HOSTNAME=10.27.69.102;KEEPALIVE=0;KEEPCONNECTIONACTIVE=0;LOADBALANCETIMEOUT=0;LOADBALANCING=0;LOGINTIMEOUT=15;MAXPOOLSIZE=100;MINPOOLSIZE=0;MULTISUBNETFAILOVER=0 - FALSE;PORTNUMBER=1433;PROXYMODE=0;QUERYTIMEOUT=0;REPORTCODEPAGECONVERSIONERRORS=0;SNAPSHOTSERIALIZABLE=0;SOCKETIDLETIMECHECKINTERVAL=1500;VALIDATESERVERCERTIFICATE=1;XMLDESCRIBETYPE=-10;",\n  "parameterizedQueries": true,\n  "extendedFetch": false,\n  "database": {\n    "login": {\n      "id": "40B2C4E84D717B49FF8A4192493484E7",\n      "name": "sqlserver_dsn_login"\n    },\n    "type": "sql_server",\n    "version": "default"\n  },\n  "driverType": "odbc",\n  "oauthParameter": "",\n  "walletInfo": "",\n  "iam": {},\n  "resource": "",\n  "scope": "",\n  "enableSso": false\n}\n'})}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>c});var t=o(96540);const s={},a=t.createContext(s);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);