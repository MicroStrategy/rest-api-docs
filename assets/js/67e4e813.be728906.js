"use strict";(self.webpackChunkrest_api_docs=self.webpackChunkrest_api_docs||[]).push([[822],{96489:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=t(74848),s=t(28453);const i={title:"Code sample - Filter reports and cubes using view filters",description:"The code sample for filter reports and cubes using view filters."},a=void 0,o={id:"common-workflows/analytics/filter-data/filter-report-and-cube-instances/filter-report-and-cube-instances-using-view-filters/code-sample",title:"Code sample - Filter reports and cubes using view filters",description:"The code sample for filter reports and cubes using view filters.",source:"@site/docs/common-workflows/analytics/filter-data/filter-report-and-cube-instances/filter-report-and-cube-instances-using-view-filters/code-sample.md",sourceDirName:"common-workflows/analytics/filter-data/filter-report-and-cube-instances/filter-report-and-cube-instances-using-view-filters",slug:"/common-workflows/analytics/filter-data/filter-report-and-cube-instances/filter-report-and-cube-instances-using-view-filters/code-sample",permalink:"/rest-api-docs/common-workflows/analytics/filter-data/filter-report-and-cube-instances/filter-report-and-cube-instances-using-view-filters/code-sample",draft:!1,unlisted:!1,editUrl:"https://github.com/MicroStrategy/rest-api-docs/tree/public/docs/common-workflows/analytics/filter-data/filter-report-and-cube-instances/filter-report-and-cube-instances-using-view-filters/code-sample.md",tags:[],version:"current",lastUpdatedBy:"ziyuhehe",lastUpdatedAt:1710490354,formattedLastUpdatedAt:"Mar 15, 2024",frontMatter:{title:"Code sample - Filter reports and cubes using view filters",description:"The code sample for filter reports and cubes using view filters."},sidebar:"tutorialSidebar",previous:{title:"Supported constant data types for view filters",permalink:"/rest-api-docs/common-workflows/analytics/filter-data/filter-report-and-cube-instances/filter-report-and-cube-instances-using-view-filters/supported-constant-data-types"},next:{title:"Error messages for view filters",permalink:"/rest-api-docs/common-workflows/analytics/filter-data/filter-report-and-cube-instances/filter-report-and-cube-instances-using-view-filters/error-messages"}},l={},d=[{value:"Filter on attribute elements",id:"filter-on-attribute-elements",level:2},{value:"Filter on attribute forms",id:"filter-on-attribute-forms",level:2},{value:"Multiple filters on attribute forms",id:"multiple-filters-on-attribute-forms",level:2},{value:"Filter on metrics",id:"filter-on-metrics",level:2},{value:"Combine filters",id:"combine-filters",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"viewLimits"})," parameter can include multiple filters, with both metric and attribute qualifications, and these filters can be nested to support more complex filtering logic. Each filter includes a ",(0,r.jsx)(n.a,{href:"/rest-api-docs/common-workflows/analytics/filter-data/filter-report-and-cube-instances/filter-report-and-cube-instances-using-view-filters/supported-operators",children:"supported operator"})," and two operands. The first operand specifies the attribute element, attribute form, or metric that will be evaluated, and the second operand specifies the attribute element, metric or constant that it will be qualified against."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"viewFilter": {\n  "operator": "string",\n  "operands": [\n    {\n      "operator": "string",\n      "operands": []\n    },\n    {\n    "operator": "string",\n    "operands": []\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Code samples are provided for the following view filter scenarios:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#filter-on-attribute-elements",children:"Filter on attribute elements"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#filter-on-attribute-forms",children:"Filter on attribute forms"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#multiple-filters-on-attribute-forms",children:"Multiple filters on attribute forms"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#filter-on-metrics",children:"Filter on metrics"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["There are several code samples for metric filtering, using different operators. There is also a code sample for ",(0,r.jsx)(n.a,{href:"#combine-filters",children:"combining filters"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Each code sample assumes that you are using a report or cube with the following data:"}),"\n",(0,r.jsx)(n.p,{children:"Attributes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Category"}),"\n",(0,r.jsx)(n.li,{children:"Item"}),"\n",(0,r.jsx)(n.li,{children:"Region"}),"\n",(0,r.jsx)(n.li,{children:"Year"}),"\n",(0,r.jsx)(n.li,{children:"Quarter"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Metrics"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Units Sold"}),"\n",(0,r.jsx)(n.li,{children:"Cost"}),"\n",(0,r.jsx)(n.li,{children:"Revenue"}),"\n",(0,r.jsx)(n.li,{children:"Profit"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Each code sample returns only the subset of data defined by the specific view filter for that sample."}),"\n",(0,r.jsx)(n.h2,{id:"filter-on-attribute-elements",children:"Filter on attribute elements"}),"\n",(0,r.jsx)(n.p,{children:"Requested data: Get all report or cube data for Electronics"}),"\n",(0,r.jsxs)(n.p,{children:["Filter definition: ",(0,r.jsx)(n.strong,{children:"Category in Electronics"})]}),"\n",(0,r.jsxs)(n.p,{children:["Operator used: ",(0,r.jsx)(n.strong,{children:"In"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "viewFilter": {\n    "operator": "In",\n    "operands": [\n      {\n        "type": "attribute",\n        "id": "8D679D3711D3E4981000E787EC6DE8A4",\n        "name": "Category"\n      },\n      {\n        "type": "elements",\n        "elements": [\n          {\n            "id": "8D679D3711D3E4981000E787EC6DE8A4:2",\n            "name": "Electronics"\n          }\n        ]\n      }\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"filter-on-attribute-forms",children:"Filter on attribute forms"}),"\n",(0,r.jsx)(n.p,{children:"Requested data: Get all report or cube data where the ID form of Category is between 1 and 3"}),"\n",(0,r.jsxs)(n.p,{children:["Filter definition: ",(0,r.jsx)(n.strong,{children:"Category@ID between 1 and 3"})]}),"\n",(0,r.jsxs)(n.p,{children:["Operator used: ",(0,r.jsx)(n.strong,{children:"Between"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "viewFilter": {\n    "operator": "Between",\n    "operands": [\n      {\n        "type": "form",\n        "attribute": {\n          "id": "8D679D3711D3E4981000E787EC6DE8A4",\n          "name": "Category"\n        },\n        "form": {\n          "id": "45C11FA478E745FEA08D781CEA190FE5",\n          "name": "ID"\n        }\n      },\n      {\n        "type": "constant",\n        "dataType": "Real",\n\n        "value": "1"\n      },\n      {\n        "type": "constant",\n        "dataType": "Real",\n        "value": "3"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"multiple-filters-on-attribute-forms",children:"Multiple filters on attribute forms"}),"\n",(0,r.jsx)(n.p,{children:"Requested data: Get all report or cube data where the value of items are The Painted Word and Hirschfeld on Line."}),"\n",(0,r.jsxs)(n.p,{children:["Filter definition: ",(0,r.jsx)(n.strong,{children:"DESC@ID of The Painted Word and Hirschfeld on Line"})]}),"\n",(0,r.jsxs)(n.p,{children:["Operator used: ",(0,r.jsx)(n.strong,{children:"In"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "viewFilter": {\n    "operator": "In",\n    "operands": [\n      {\n        "type": "form",\n        "attribute": {\n          "id": "8D679D4211D3E4981000E787EC6DE8A4"\n        },\n        "form": {\n          "id": "CCFBE2A5EADB4F50941FB879CCF1721C",\n          "name": "DESC"\n        }\n      },\n      {\n        "type": "constants",\n        "dataType": "Char",\n        "values": ["The Painted Word", "Hirschfeld on Line"]\n      }\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"filter-on-metrics",children:"Filter on metrics"}),"\n",(0,r.jsx)(n.p,{children:"Requested data: Get report or cube data with revenue less than cost (i.e., cost greater than revenue)"}),"\n",(0,r.jsxs)(n.p,{children:["Filter definition: ",(0,r.jsx)(n.strong,{children:"Cost > Revenue"})]}),"\n",(0,r.jsxs)(n.p,{children:["Operator used: ",(0,r.jsx)(n.strong,{children:"Greater"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "viewFilter": {\n    "operator": "Greater",\n    "operands": [\n      {\n        "type": "metric",\n        "id": "7FD5B69611D5AC76C000D98A4CC5F24F",\n        "name": "Cost"\n      },\n      {\n        "type": "metric",\n        "id": "4C05177011D3E877C000B3B2D86C964F",\n        "name": "Revenue"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Requested data: Get report or cube data with cost between $200,000 and $400,000"}),"\n",(0,r.jsxs)(n.p,{children:["Filter definition: ",(0,r.jsx)(n.strong,{children:"200000 < Cost < 400000"})]}),"\n",(0,r.jsxs)(n.p,{children:["Operator used: ",(0,r.jsx)(n.strong,{children:"Between"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "viewFilter": {\n    "operator": "Between",\n    "operands": [\n      {\n        "type": "metric",\n        "id": "7FD5B69611D5AC76C000D98A4CC5F24F",\n        "name": "Cost"\n      },\n      {\n        "type": "constant",\n        "dataType": "Real",\n        "value": "200000"\n      },\n      {\n        "type": "constant",\n        "dataType": "Real",\n        "value": "400000"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Requested data: Get report or cube data with cost greater than or equal to $500,000"}),"\n",(0,r.jsxs)(n.p,{children:["Filter : ",(0,r.jsx)(n.strong,{children:"Cost >= 500000"})]}),"\n",(0,r.jsxs)(n.p,{children:["Operator used: ",(0,r.jsx)(n.strong,{children:"GreaterEqual"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "viewFilter": {\n    "operator": "GreaterEqual",\n    "operands": [\n      {\n        "type": "metric",\n        "id": "7FD5B69611D5AC76C000D98A4CC5F24F",\n        "name": "Cost"\n      },\n      {\n        "type": "constant",\n        "dataType": "Real",\n        "value": "500000"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Requested data: Get report or cube data with the top 20% of Cost"}),"\n",(0,r.jsxs)(n.p,{children:["Filter definition: ",(0,r.jsx)(n.strong,{children:"Top 20 percent (Cost)"})]}),"\n",(0,r.jsxs)(n.p,{children:["Operator used: ",(0,r.jsx)(n.strong,{children:"Percent.Top"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "viewFilter": {\n    "operator": "Percent.Top",\n    "operands": [\n      {\n        "type": "metric",\n        "id": "7FD5B69611D5AC76C000D98A4CC5F24F",\n        "name": "Cost"\n      },\n      {\n        "type": "constant",\n        "dataType": "Real",\n        "value": "20%"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Requested data: Get report or cube data with the top three Cost values"}),"\n",(0,r.jsxs)(n.p,{children:["Filter definition: ",(0,r.jsx)(n.strong,{children:"Top 3 (Cost)"})]}),"\n",(0,r.jsxs)(n.p,{children:["Operator used: ",(0,r.jsx)(n.strong,{children:"Rank.Top"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "viewFilter": {\n    "operator": "Rank.Top",\n\n    "operands": [\n      {\n        "type": "metric",\n        "id": "7FD5B69611D5AC76C000D98A4CC5F24F",\n        "name": "Cost"\n      },\n      {\n        "type": "constant",\n        "dataType": "Real",\n        "value": "3"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Requested data: Get report or cube data with Revenue percentage rank equal to 50%"}),"\n",(0,r.jsxs)(n.p,{children:["Filter definition: ",(0,r.jsx)(n.strong,{children:"Revenue percentage rank equal to 50 percent"})]}),"\n",(0,r.jsxs)(n.p,{children:["Operator used: ",(0,r.jsx)(n.strong,{children:"Percent.Equals"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "viewFilter": {\n    "operator": "Percent.Equals",\n    "operands": [\n      {\n        "type": "metric",\n        "id": "2FBA0F9B416EFE38DCF22F8CFE4AA75C",\n        "name": "Revenue"\n      },\n      {\n        "type": "constant",\n        "dataType": "Real",\n        "value": "0.5"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"combine-filters",children:"Combine filters"}),"\n",(0,r.jsx)(n.p,{children:"Requested data: Get Cost and Revenue for Electronics for the Northeast and Northwest"}),"\n",(0,r.jsxs)(n.p,{children:["Filter definition: ",(0,r.jsx)(n.strong,{children:"(Region in Northeast, Northwest) and (Category in Electronics)"})]}),"\n",(0,r.jsxs)(n.p,{children:["Operators: ",(0,r.jsx)(n.strong,{children:"And"}),",",(0,r.jsx)(n.strong,{children:"In"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "viewFilter": {\n    "operator": "And",\n    "operands": [\n      {\n        "operator": "In",\n        "operands": [\n          {\n            "type": "attribute",\n            "id": "8D679D4B11D3E4981000E787EC6DE8A4",\n            "name": "Region"\n          },\n          {\n            "type": "elements",\n            "elements": [\n              {\n                "id": "h1;8D679D4B11D3E4981000E787EC6DE8A4",\n                "name": "Northeast"\n              },\n              {\n                "id": "h6;8D679D4B11D3E4981000E787EC6DE8A4",\n                "name": "Northwest"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        "operator": "In",\n        "operands": [\n          {\n            "type": "attribute",\n            "id": "8D679D3711D3E4981000E787EC6DE8A4",\n            "name": "Category"\n          },\n          {\n            "type": "elements",\n            "elements": [\n              {\n                "id": "8D679D3711D3E4981000E787EC6DE8A4:2",\n                "name": "Electronics"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Requested data: Get all report or cube data for the Northeast and Northwest or with cost greater than or equal to $500,"}),"\n",(0,r.jsxs)(n.p,{children:["Filter definition: ",(0,r.jsx)(n.strong,{children:"(Region in Northeast, Northwest) or (Cost >= $500,000)"})]}),"\n",(0,r.jsxs)(n.p,{children:["Operators: ",(0,r.jsx)(n.strong,{children:"Or"}),", ",(0,r.jsx)(n.strong,{children:"In"}),", ",(0,r.jsx)(n.strong,{children:"GreaterEqual"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "viewFilter": {\n    "operator": "Or",\n    "operands": [\n      {\n        "operator": "In",\n        "operands": [\n          {\n            "type": "attribute",\n            "id": "8D679D4B11D3E4981000E787EC6DE8A4",\n            "name": "Region"\n          },\n          {\n            "type": "elements",\n            "elements": [\n              {\n                "id": "h1;8D679D4B11D3E4981000E787EC6DE8A4",\n                "name": "Northeast"\n              },\n              {\n                "id": "h6;8D679D4B11D3E4981000E787EC6DE8A4",\n                "name": "Northwest"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        "operator": "GreaterEqual",\n        "operands": [\n          {\n            "type": "metric",\n            "id": "7FD5B69611D5AC76C000D98A4CC5F24F",\n            "name": "Cost"\n          },\n          {\n            "type": "constant",\n            "dataType": "Real",\n            "value": "500000"\n          }\n        ]\n      }\n    ]\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Requested data: Get all report or cube data with cost not between $200,000 and $400,"}),"\n",(0,r.jsxs)(n.p,{children:["Filter definition: ",(0,r.jsx)(n.strong,{children:"Not 200000 < Cost < 400000"})]}),"\n",(0,r.jsxs)(n.p,{children:["Operators: ",(0,r.jsx)(n.strong,{children:"Not, Between"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "viewFilter": {\n    "operator": "Not",\n    "operands": [\n      {\n        "operator": "Between",\n        "operands": [\n          {\n            "type": "metric",\n            "id": "7FD5B69611D5AC76C000D98A4CC5F24F",\n            "name": "Cost"\n          },\n          {\n            "type": "constant",\n            "dataType": "Real",\n            "value": "200000"\n          },\n          {\n            "type": "constant",\n            "dataType": "Real",\n            "value": "400000"\n          }\n        ]\n      }\n    ]\n  }\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(96540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);