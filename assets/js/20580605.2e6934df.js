"use strict";(self.webpackChunkrest_api_docs=self.webpackChunkrest_api_docs||[]).push([[2365],{88372:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var o=t(74848),a=t(28453);const s={title:"Create a fact object",sidebar_label:"Create a fact object",description:"This workflow sample demonstrates how to create a fact object through the Modeling service."},i=void 0,r={id:"common-workflows/modeling/manage-fact-objects/create-a-fact-object",title:"Create a fact object",description:"This workflow sample demonstrates how to create a fact object through the Modeling service.",source:"@site/docs/common-workflows/modeling/manage-fact-objects/create-a-fact-object.md",sourceDirName:"common-workflows/modeling/manage-fact-objects",slug:"/common-workflows/modeling/manage-fact-objects/create-a-fact-object",permalink:"/rest-api-docs/common-workflows/modeling/manage-fact-objects/create-a-fact-object",draft:!1,unlisted:!1,editUrl:"https://github.com/MicroStrategy/rest-api-docs/tree/public/docs/common-workflows/modeling/manage-fact-objects/create-a-fact-object.md",tags:[],version:"current",lastUpdatedBy:"AugLychee",lastUpdatedAt:1710818077,formattedLastUpdatedAt:"Mar 19, 2024",frontMatter:{title:"Create a fact object",sidebar_label:"Create a fact object",description:"This workflow sample demonstrates how to create a fact object through the Modeling service."},sidebar:"tutorialSidebar",previous:{title:"Retrieve a fact's definition within a changeset",permalink:"/rest-api-docs/common-workflows/modeling/manage-fact-objects/retrieve-a-facts-definition-within-a-changeset"},next:{title:"Update a fact object",permalink:"/rest-api-docs/common-workflows/modeling/manage-fact-objects/update-a-fact-object"}},c={},l=[{value:"Create a fact object",id:"create-a-fact-object",level:2},{value:"More samples",id:"more-samples",level:2},{value:"Multiple expressions",id:"multiple-expressions",level:3},{value:"Expressions in &quot;tree&quot; format",id:"expressions-in-tree-format",level:3},{value:"Use warehouse partition mapping tables or metadata partition base tables in expressions",id:"use-warehouse-partition-mapping-tables-or-metadata-partition-base-tables-in-expressions",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components},{Available:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Available",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t,{since:"2021 Update 1"}),"\n",(0,o.jsxs)(n.admonition,{type:"tip",children:[(0,o.jsxs)(n.p,{children:["You can try out this workflow at ",(0,o.jsx)(n.a,{href:"https://www.postman.com/microstrategysdk/workspace/microstrategy-rest-api/folder/16131298-11d116e7-cf31-451a-848e-0d2be6fa3041?ctx=documentation",children:"REST API Playground"}),"."]}),(0,o.jsxs)(n.p,{children:["Learn more about MicroStrategy REST API Playground ",(0,o.jsx)(n.a,{href:"/rest-api-docs/getting-started/playground",children:"here"}),"."]})]}),"\n",(0,o.jsx)(n.p,{children:"This workflow sample demonstrates how to create a fact object through the Modeling service."}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Create a changeset"}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#create-a-fact-object",children:"Create a fact object"})}),"\n",(0,o.jsx)(n.li,{children:"Commit the changeset"}),"\n",(0,o.jsx)(n.li,{children:"Delete the changeset"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:['You want to create a "Profit" fact object under the Public Objects folder in the MicroStrategy Tutorial project. The folder object ID is ',(0,o.jsx)(n.code,{children:"98FE182C2A10427EACE0CD30B6768258"}),". The project ID is ",(0,o.jsx)(n.code,{children:"B7CA92F04B9FAE8D941C3E9B7E0CD754"}),"."]}),"\n",(0,o.jsxs)(n.admonition,{type:"info",children:[(0,o.jsxs)(n.p,{children:["Get the authorization token needed to execute the request with ",(0,o.jsx)(n.a,{href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Authentication/postLogin",children:"POST /api/auth/login"}),"."]}),(0,o.jsxs)(n.p,{children:["Get the project ID from ",(0,o.jsx)(n.a,{href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Projects/getProjects_1",children:"GET /api/projects"}),"."]})]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["Changesets are used in this workflow. For information on how to create and use changesets, see ",(0,o.jsx)(n.a,{href:"/rest-api-docs/common-workflows/modeling/changesets",children:"Changesets"}),"."]})}),"\n",(0,o.jsx)(n.h2,{id:"create-a-fact-object",children:"Create a fact object"}),"\n",(0,o.jsxs)(n.p,{children:["Endpoint: ",(0,o.jsx)(n.a,{href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Facts/ms-postFact",children:"POST /api/model/facts"})]}),"\n",(0,o.jsxs)(n.p,{children:['You want to create a fact named "Profit" with one expression ',(0,o.jsx)(n.code,{children:'"TOT_DOLLAR_SALES - TOT_COST"'}),' in "tokens" format. This expression will be used in the two tables ',(0,o.jsx)(n.code,{children:'"CITY_MNTH_SLS"'})," and ",(0,o.jsx)(n.code,{children:'"CUSTOMER_SLS"'}),". More examples of creating a new fact are listed below."]}),"\n",(0,o.jsx)(n.p,{children:'To create a fact, in the request body, "expressions" contains a list of fact expressions. Each fact contains "expression" and "tables".'}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:'"expression": Must be in either "tree" or "tokens" format.'}),"\n",(0,o.jsx)(n.p,{children:'Tokens are a semi-structured representation of MicroStrategy expression text that includes object references. For example, let\u2019s say a fact expression is "Revenue - Cost". When the fact expression is represented as tokens, the text is broken down into pieces (tokens) with information about what these pieces represent in the metadata: ("Revenue", Revenue_ID), ("-", Minus_ID), ("Cost", Cost_ID).'}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:'"tables": A list of tables that the "expression" applies to. Warehouse partition base tables and metadata partition mapping tables are not allowed here.'}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:'"dataType" is optional. If omitted, it calculates based on the first fact expression.'}),"\n",(0,o.jsx)(n.p,{children:"Sample Request Header:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-http",children:'"accept": "application/json"\n"X-MSTR-AuthToken": "o0ak9privdo27nfo798j40m8aa"\n"X-MSTR-MS-Changeset": "805C5F3FB78A436FAE37C943471C24AD"\n'})}),"\n",(0,o.jsx)(n.p,{children:"Construct the expression."}),"\n",(0,o.jsxs)(n.p,{children:['Make a copy of the following "tokens" format template and modify the ',(0,o.jsx)(n.code,{children:'"fact_expression"'})," to construct an expression."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'"expression":{\n  "tokens":[\n    {\n      "value":"<fact_expression>"\n    }\n  ]\n}\n\nSample Request Body:\n\n{\n   "information":{\n      "subType":"fact",\n      "name":"Profit",\n      "destinationFolderId":"98FE182C2A10427EACE0CD30B6768258"\n   },\n   "expressions":[\n      {\n         "expression":{\n            "tokens":[\n               {\n                  "value":"TOT_DOLLAR_SALES - TOT_COST"\n               }\n            ]\n         },\n         "tables":[\n            {\n               "objectId":"9A28CFCC42DB8E9627D547975958C138",\n               "subType":"logical_table",\n               "name":"CITY_MNTH_SLS"\n            },\n            {\n               "objectId":"54D82D5B4BD115DA313C03A5742900AE",\n               "subType":"logical_table",\n               "name":"CUSTOMER_SLS"\n            }\n         ]\n      }\n   ],\n   "entryLevel":[\n   ]\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"Sample Curl:"}),"\n",(0,o.jsxs)(n.p,{children:["In this sample workflow, you want to return the newly created fact with its expression in all formats. Therefore, you should set ",(0,o.jsx)(n.code,{children:"showExpressionAs=tree"})," and ",(0,o.jsx)(n.code,{children:"showExpressionsAs=tokens"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'curl -X POST "https://demo.microstrategy.com/MicroStrategyLibrary/api/model/facts?showExpressionAs=tokens&showExpressionAs=tree" -H "accept: application/json" -H "X-MSTR-AuthToken: o0ak9privdo27nfo798j40m8aa" -H "X-MSTR-MS-Changeset: 805C5F3FB78A436FAE37C943471C24AD" -H "Content-Type: application/json" -d "{\\\\"information\\\\":{\\\\"subType\\\\":\\\\"fact\\\\",\\\\"name\\\\":\\\\"Profit_tree\\\\",\\\\"destinationFolderId\\\\":\\\\"A0DC38971F48DFD941780DBE549A1F28\\\\"},\\\\"expressions\\\\":[{\\\\"expression\\\\":{\\\\"tree\\\\":{\\\\"function\\\\":\\\\"minus\\\\",\\\\"children\\\\":[{\\\\"type\\\\":\\\\"column_reference\\\\",\\\\"columnName\\\\":\\\\"TOT_DOLLAR_SALES\\\\",\\\\"objectId\\\\":\\\\"8D6792A011D3E4981000E787EC6DE8A4\\\\"},{\\\\"type\\\\":\\\\"column_reference\\\\",\\\\"columnName\\\\":\\\\"TOT_COST\\\\",\\\\"objectId\\\\":\\\\"7A4ABDFD11D5AC6FC000D98A4CC5F24F\\\\"}],\\\\"type\\\\":\\\\"operator\\\\"}},\\\\"tables\\\\":[{\\\\"objectId\\\\":\\\\"9A28CFCC42DB8E9627D547975958C138\\\\",\\\\"subType\\\\":\\\\"logical_table\\\\",\\\\"name\\\\":\\\\"CITY_MNTH_SLS\\\\"},{\\\\"objectId\\\\":\\\\"54D82D5B4BD115DA313C03A5742900AE\\\\",\\\\"subType\\\\":\\\\"logical_table\\\\",\\\\"name\\\\":\\\\"CUSTOMER_SLS\\\\"}]}],\\\\"entryLevel\\\\":[]}"\n'})}),"\n",(0,o.jsx)(n.p,{children:"Sample Response Body:"}),"\n",(0,o.jsx)(n.p,{children:"You can view the new fact's definition in the body of the response."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "information": {\n    "versionId": "F897A7472295406C922304B760691DCE",\n    "primaryLocale": "en-US",\n    "objectId": "504800FA17A743E48855A603D64E9077",\n    "subType": "fact",\n    "name": "Profit",\n    "destinationFolderId": "98FE182C2A10427EACE0CD30B6768258"\n  },\n  "dataType": {\n    "type": "double",\n    "precision": 0,\n    "scale": -1\n  },\n  "expressions": [\n    {\n      "expressionId": "5640F70F676B4279A12E754F9EFE88F3",\n      "expression": {\n        "text": "TOT_DOLLAR_SALES - TOT_COST",\n        "tree": {\n          "function": "minus",\n          "children": [\n            {\n              "type": "column_reference",\n              "columnName": "TOT_DOLLAR_SALES",\n              "objectId": "8D6792A011D3E4981000E787EC6DE8A4"\n            },\n            {\n              "type": "column_reference",\n              "columnName": "TOT_COST",\n              "objectId": "7A4ABDFD11D5AC6FC000D98A4CC5F24F"\n            }\n          ],\n          "type": "operator"\n        },\n        "tokens": [\n          {\n            "level": "resolved",\n            "state": "initial",\n            "value": "TOT_DOLLAR_SALES",\n            "type": "column_reference",\n            "target": {\n              "dateCreated": "2001-01-02T20:48:35.000Z",\n              "dateModified": "2016-08-18T19:20:24.000Z",\n              "versionId": "CFE0642A11E66578144C0080EF557A15",\n              "primaryLocale": "en-US",\n              "objectId": "8D6792A011D3E4981000E787EC6DE8A4",\n              "subType": "column",\n              "name": "TOT_DOLLAR_SALES"\n            }\n          },\n          {\n            "level": "resolved",\n            "state": "initial",\n            "value": "-",\n            "type": "character",\n            "target": {\n              "dateCreated": "2001-01-02T20:47:41.000Z",\n              "dateModified": "2021-03-09T15:22:04.454Z",\n              "versionId": "3417594811EB80EB25D80080EF25AB1A",\n              "primaryLocale": "en-US",\n              "objectId": "8107C311DD9911D3B98100C04F2233EA",\n              "subType": "function",\n              "name": "-",\n              "description": "Returns the difference between two values."\n            }\n          },\n          {\n            "level": "resolved",\n            "state": "initial",\n            "value": "TOT_COST",\n            "type": "column_reference",\n            "target": {\n              "dateCreated": "2001-09-18T19:59:30.000Z",\n              "dateModified": "2016-08-18T19:20:24.000Z",\n              "versionId": "CFE0642A11E66578144C0080EF557A15",\n              "primaryLocale": "en-US",\n              "objectId": "7A4ABDFD11D5AC6FC000D98A4CC5F24F",\n              "subType": "column",\n              "name": "TOT_COST"\n            }\n          },\n          {\n            "level": "resolved",\n            "state": "initial",\n            "value": "",\n            "type": "end_of_text"\n          }\n        ]\n      },\n      "tables": [\n        {\n          "objectId": "9A28CFCC42DB8E9627D547975958C138",\n          "subType": "logical_table",\n          "name": "CITY_MNTH_SLS"\n        },\n        {\n          "objectId": "54D82D5B4BD115DA313C03A5742900AE",\n          "subType": "logical_table",\n          "name": "CUSTOMER_SLS"\n        }\n      ]\n    }\n  ],\n  "entryLevel": []\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"Response Code: 201 (A new fact is created successfully in the changeset.)"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"more-samples",children:"More samples"}),"\n",(0,o.jsx)(n.p,{children:"The following are additional examples for creating a fact object."}),"\n",(0,o.jsx)(n.h3,{id:"multiple-expressions",children:"Multiple expressions"}),"\n",(0,o.jsx)(n.p,{children:"You can create a fact object with multiple expressions."}),"\n",(0,o.jsxs)(n.p,{children:['In this sample, you want to create a fact named "Profit" with two expressions: 1) ',(0,o.jsx)(n.code,{children:'"TOT_DOLLAR_SALES - TOT_COST"'})," used in the tables ",(0,o.jsx)(n.code,{children:'"CITY_MNTH_SLS"'})," and ",(0,o.jsx)(n.code,{children:'"CUSTOMER_SLS"'}),", and 2) ",(0,o.jsx)(n.code,{children:'"ORDER_AMT - ORDER_COST"'})," used in the table ",(0,o.jsx)(n.code,{children:'"ORDER_FACT"'}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Sample Request Body:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "information": {\n    "subType": "fact",\n    "name": "Profit",\n    "destinationFolderId": "98FE182C2A10427EACE0CD30B6768258"\n  },\n  "expressions": [\n    {\n      "expression": {\n        "tokens": [\n          {\n            "value": "ORDER_AMT - ORDER_COST"\n          }\n        ]\n      },\n      "tables": [\n        {\n          "objectId": "8D6793D411D3E4981000E787EC6DE8A4",\n          "subType": "logical_table",\n          "name": "ORDER_FACT"\n        }\n      ]\n    },\n    {\n      "expression": {\n        "tokens": [\n          {\n            "value": "TOT_DOLLAR_SALES - TOT_COST"\n          }\n        ]\n      },\n      "tables": [\n        {\n          "objectId": "9A28CFCC42DB8E9627D547975958C138",\n          "subType": "logical_table",\n          "name": "CITY_MNTH_SLS"\n        },\n        {\n          "objectId": "54D82D5B4BD115DA313C03A5742900AE",\n          "subType": "logical_table",\n          "name": "CUSTOMER_SLS"\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"expressions-in-tree-format",children:'Expressions in "tree" format'}),"\n",(0,o.jsxs)(n.p,{children:['In this sample, you want to create a fact named "Profit" with one expression ',(0,o.jsx)(n.code,{children:'"TOT_DOLLAR_SLS - TOT-COST"'}),' in "tree" format. This expression will be used in the two tables ',(0,o.jsx)(n.code,{children:'"CITY_MNTH_SLS"'})," and ",(0,o.jsx)(n.code,{children:'"CUSTOMER_SLS"'}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Sample Request Body:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "information": {\n    "subType": "fact",\n    "name": "Profit",\n    "destinationFolderId": "98FE182C2A10427EACE0CD30B6768258"\n  },\n  "expressions": [\n    {\n      "expression": {\n        "tree": {\n          "function": "minus",\n          "children": [\n            {\n              "type": "column_reference",\n              "columnName": "TOT_DOLLAR_SALES",\n              "objectId": "8D6792A011D3E4981000E787EC6DE8A4"\n            },\n            {\n              "type": "column_reference",\n              "columnName": "TOT_COST",\n              "objectId": "7A4ABDFD11D5AC6FC000D98A4CC5F24F"\n            }\n          ],\n          "type": "operator"\n        }\n      },\n      "tables": [\n        {\n          "objectId": "9A28CFCC42DB8E9627D547975958C138",\n          "subType": "logical_table",\n          "name": "CITY_MNTH_SLS"\n        },\n        {\n          "objectId": "54D82D5B4BD115DA313C03A5742900AE",\n          "subType": "logical_table",\n          "name": "CUSTOMER_SLS"\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"use-warehouse-partition-mapping-tables-or-metadata-partition-base-tables-in-expressions",children:"Use warehouse partition mapping tables or metadata partition base tables in expressions"}),"\n",(0,o.jsxs)(n.p,{children:["In this sample, you want to create a fact named ",(0,o.jsx)(n.code,{children:'"Time"'})," that references ",(0,o.jsx)(n.code,{children:'"month_id"'})," column of the warehouse partition mapping table ",(0,o.jsx)(n.code,{children:'"pmt_tc86967_02"'})," and ",(0,o.jsx)(n.code,{children:'"pmt_tc86967_01"'}),", and ",(0,o.jsx)(n.code,{children:'"YEAR_ID"'})," column of the metadata partition base table ",(0,o.jsx)(n.code,{children:'"LU_MONTH"'})," and ",(0,o.jsx)(n.code,{children:'"LU_YEAR"'}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Sample Request Body:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "information": {\n    "subType": "fact",\n    "name": "Time"\n  },\n  "dataType": {\n    "type": "double",\n    "precision": 0,\n    "scale": -2147483648\n  },\n  "expressions": [\n    {\n      "expression": {\n        "tokens": [\n          {\n            "type": "column_reference",\n            "value": "YEAR_ID",\n            "target": {\n              "objectId": "8D6791E111D3E4981000E787EC6DE8A4",\n              "subType": "column",\n              "name": "YEAR_ID"\n            }\n          },\n          {\n            "level": "resolved",\n            "state": "initial",\n            "value": "",\n            "type": "end_of_text"\n          }\n        ]\n      },\n      "tables": [\n        {\n          "objectId": "8D6793C211D3E4981000E787EC6DE8A4",\n          "subType": "logical_table",\n          "name": "LU_YEAR"\n        },\n        {\n          "objectId": "8D67938011D3E4981000E787EC6DE8A4",\n          "subType": "logical_table",\n          "name": "LU_MONTH"\n        }\n      ]\n    },\n    {\n      "expression": {\n        "text": "month_id",\n        "tokens": [\n          {\n            "level": "resolved",\n            "state": "initial",\n            "value": "month_id",\n            "type": "column_reference",\n            "target": {\n              "acg": 255,\n              "primaryLocale": "en-US",\n              "objectId": "8D6791E011D3E4981000E787EC6DE8A4",\n              "subType": "column",\n              "name": "month_id"\n            }\n          },\n          {\n            "level": "resolved",\n            "state": "initial",\n            "value": "",\n            "type": "end_of_text"\n          }\n        ]\n      },\n      "tables": [\n        {\n          "objectId": "012666511FB24FD18860322376581891",\n          "subType": "table_partition_wh",\n          "name": "pmt_tc86967_02"\n        },\n        {\n          "objectId": "A05E98A407DD407DAA076FC06C6E464F",\n          "subType": "table_partition_wh",\n          "name": "pmt_tc86967_01"\n        }\n      ]\n    }\n  ]\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var o=t(96540);const a={},s=o.createContext(a);function i(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);