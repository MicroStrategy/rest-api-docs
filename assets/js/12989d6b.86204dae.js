"use strict";(self.webpackChunkrest_api_docs=self.webpackChunkrest_api_docs||[]).push([[9186],{3905:function(e,t,a){a.d(t,{Zo:function(){return i},kt:function(){return d}});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},i=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),m=p(a),d=o,h=m["".concat(c,".").concat(d)]||m[d]||u[d]||r;return a?n.createElement(h,s(s({ref:t},i),{},{components:a})):n.createElement(h,s({ref:t},i))}));function d(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,s=new Array(r);s[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var p=2;p<r;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2946:function(e,t,a){a.r(t),a.d(t,{assets:function(){return i},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var n=a(3117),o=a(102),r=(a(7294),a(3905)),s=["components"],l={title:"Reload the Schema Asynchronously",description:"This workflow sample demonstrates how to reload (update) the schema asynchronously."},c=void 0,p={unversionedId:"common-workflows/manage-the-schema/reload-the-schema-asynchronously",id:"common-workflows/manage-the-schema/reload-the-schema-asynchronously",title:"Reload the Schema Asynchronously",description:"This workflow sample demonstrates how to reload (update) the schema asynchronously.",source:"@site/docs/common-workflows/manage-the-schema/reload-the-schema-asynchronously.md",sourceDirName:"common-workflows/manage-the-schema",slug:"/common-workflows/manage-the-schema/reload-the-schema-asynchronously",permalink:"/rest-api-docs/common-workflows/manage-the-schema/reload-the-schema-asynchronously",draft:!1,editUrl:"https://github.com/MicroStrategy/rest-api-docs/tree/main/docs/common-workflows/manage-the-schema/reload-the-schema-asynchronously.md",tags:[],version:"current",lastUpdatedBy:"Liang, Jiapei",lastUpdatedAt:1663189678,formattedLastUpdatedAt:"Sep 14, 2022",frontMatter:{title:"Reload the Schema Asynchronously",description:"This workflow sample demonstrates how to reload (update) the schema asynchronously."},sidebar:"tutorialSidebar",previous:{title:"Reload the Schema Synchronously",permalink:"/rest-api-docs/common-workflows/manage-the-schema/reload-the-schema-synchronously"},next:{title:"Manage Users and User Groups",permalink:"/rest-api-docs/common-workflows/manage-user-and-user-groups/"}},i={},u=[{value:"Reload (update) the schema asynchronously",id:"reload-update-the-schema-asynchronously",level:2},{value:"Check the status of the schema reload (update)",id:"check-the-status-of-the-schema-reload-update",level:2}],m={toc:u};function d(e){var t=e.components,a=(0,o.Z)(e,s);return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You can try out this workflow at ",(0,r.kt)("a",{parentName:"p",href:"https://www.postman.com/microstrategysdk/workspace/microstrategy-rest-api/folder/16131298-edc29ca6-4db8-4a8b-988e-11d9583ed993?ctx=documentation"},"REST API Playground"),"."),(0,r.kt)("p",{parentName:"admonition"},"Learn more about MicroStrategy REST API Playground ",(0,r.kt)("a",{parentName:"p",href:"/rest-api-docs/getting-started/playground"},"here"),".")),(0,r.kt)("p",null,"This workflow sample demonstrates how to reload (update) the schema asynchronously."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#reload-update-the-schema-asynchronously"},"Reload (update) the schema asynchronously.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#check-the-status-of-the-schema-reload-update"},"Check the status of the schema reload (update)."))),(0,r.kt)("p",null,"You want to reload (update) the schema asynchronously in the MicroStrategy Tutorial project. The project ID is ",(0,r.kt)("inlineCode",{parentName:"p"},"B7CA92F04B9FAE8D941C3E9B7E0CD754"),"."),(0,r.kt)("p",null,"Obtain the authorization token needed to execute the request using ",(0,r.kt)("a",{parentName:"p",href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Authentication/postLogin"},"POST /api/auth/login"),"."),(0,r.kt)("p",null,"Obtain the project ID from ",(0,r.kt)("a",{parentName:"p",href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Projects/getProjects_1"},"GET /api/projects"),"."),(0,r.kt)("h2",{id:"reload-update-the-schema-asynchronously"},"Reload (update) the schema asynchronously"),(0,r.kt)("p",null,"Use ",(0,r.kt)("a",{parentName:"p",href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Schema/ms-schemaReload"},"POST /api/model/schema/reload")),(0,r.kt)("p",null,"Sample Request Header:"),(0,r.kt)("p",null,"Set ",(0,r.kt)("inlineCode",{parentName:"p"},"Prefer")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"respond-async")," to execute this API asynchronously. Use GET Tasks APIs to check the status of the task."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'"accept": "application/json"\n"X-MSTR-AuthToken": "ouddou5qdd421ndfpjqd6ssman"\n"X-MSTR-ProjectID": "B7CA92F04B9FAE8D941C3E9B7E0CD754\n"Prefer": "respond-async"\n')),(0,r.kt)("p",null,"Sample Request Body"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"updateTypes")," is required in the request body. This field can be empty, contain any of the following options, or all of them:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"table_key"),": Use this option if you changed the key structure of a table."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"entry_level"),": Use this option if you changed the level at which a fact is stored."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"logical_size"),": Use this option to recalculate logical table sizes and override any modifications you made to logical table sizes.")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "updateTypes": ["table_key", "entry_level", "logical_size"]\n}\n')),(0,r.kt)("p",null,"Sample Curl:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST "https://demo.microstrategy.com/MicroStrategyLibrary/api/model/schema/reload" \\\n-H "accept: application/json" \\\n-H "X-MSTR-AuthToken: ouddou5qdd421ndfpjqd6ssman" \\\n-H "Prefer: respond-async" \\\n-H "X-MSTR-ProjectID: B7CA92F04B9FAE8D941C3E9B7E0CD754" \\\n-H "Content-Type: application/json" \\\n-d \'{"updateTypes":["table_key","entry_level","logical_size"]}\'\n')),(0,r.kt)("p",null,"Sample Response Body:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "907CAAF6F0644A8DA2CBF9D3C4C1B12E",\n  "task": "reloadSchema",\n  "startTime": "2021-03-24T02:05:14.236396Z",\n  "status": "running"\n}\n')),(0,r.kt)("p",null,"Response Code: 202 (The schema reload (asynchronous) request is accepted.)"),(0,r.kt)("h2",{id:"check-the-status-of-the-schema-reload-update"},"Check the status of the schema reload (update)"),(0,r.kt)("p",null,"Use ",(0,r.kt)("a",{parentName:"p",href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Schema/ms-getTask"},"GET /api/model/tasks/{taskId}")),(0,r.kt)("p",null,"Sample Request Header:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'"accept": "application/json"\n"X-MSTR-AuthToken": "ouddou5qdd421ndfpjqd6ssman"\n"X-MSTR-ProjectID": "B7CA92F04B9FAE8D941C3E9B7E0CD754\n"taskId": "907CAAF6F0644A8DA2CBF9D3C4C1B12E"\n')),(0,r.kt)("p",null,"Sample Request Body: Empty"),(0,r.kt)("p",null,"Sample Curl:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET "https://demo.microstrategy.com/MicroStrategyLibrary/api/model/tasks/907CAAF6F0644A8DA2CBF9D3C4C1B12E" -H "accept: application/json" -H "X-MSTR-AuthToken: ouddou5qdd421ndfpjqd6ssman" -H "X-MSTR-ProjectID: B7CA92F04B9FAE8D941C3E9B7E0CD754"\n')),(0,r.kt)("p",null,"Sample Response Body:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "907CAAF6F0644A8DA2CBF9D3C4C1B12E",\n  "task": "reloadSchema",\n  "startTime": "2021-03-24T02:05:14.236396Z",\n  "endTime": "2021-03-24T02:05:15.740630Z",\n  "status": "completed"\n}\n')),(0,r.kt)("p",null,"Response Code: 200 (The task execution has completed or failed.)"))}d.isMDXComponent=!0}}]);