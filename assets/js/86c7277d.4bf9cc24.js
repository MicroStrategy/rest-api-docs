"use strict";(self.webpackChunkrest_api_docs=self.webpackChunkrest_api_docs||[]).push([[5327],{33037:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>o});var s=r(74848),n=r(28453);const i={title:"Supported operators for metric limits",description:"The supported operators for metric limits."},d=void 0,c={id:"common-workflows/analytics/filter-data/filter-report-and-cube-instances/filter-report-and-cube-instances-using-metric-limits/supported-operators",title:"Supported operators for metric limits",description:"The supported operators for metric limits.",source:"@site/docs/common-workflows/analytics/filter-data/filter-report-and-cube-instances/filter-report-and-cube-instances-using-metric-limits/supported-operators.md",sourceDirName:"common-workflows/analytics/filter-data/filter-report-and-cube-instances/filter-report-and-cube-instances-using-metric-limits",slug:"/common-workflows/analytics/filter-data/filter-report-and-cube-instances/filter-report-and-cube-instances-using-metric-limits/supported-operators",permalink:"/rest-api-docs/common-workflows/analytics/filter-data/filter-report-and-cube-instances/filter-report-and-cube-instances-using-metric-limits/supported-operators",draft:!1,unlisted:!1,editUrl:"https://github.com/MicroStrategy/rest-api-docs/tree/public/docs/common-workflows/analytics/filter-data/filter-report-and-cube-instances/filter-report-and-cube-instances-using-metric-limits/supported-operators.md",tags:[],version:"current",lastUpdatedBy:"wangrenhang",lastUpdatedAt:1711017072,formattedLastUpdatedAt:"Mar 21, 2024",frontMatter:{title:"Supported operators for metric limits",description:"The supported operators for metric limits."},sidebar:"tutorialSidebar",previous:{title:"Filter report and cube instances using metric limits",permalink:"/rest-api-docs/common-workflows/analytics/filter-data/filter-report-and-cube-instances/filter-report-and-cube-instances-using-metric-limits/"},next:{title:"Code sample - Filter reports and cubes using metric limits",permalink:"/rest-api-docs/common-workflows/analytics/filter-data/filter-report-and-cube-instances/filter-report-and-cube-instances-using-metric-limits/code-sample"}},l={},o=[];function a(t){const e={p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:"The table below lists the operators/functions that can be used to define metric limits when you are creating reports and cube instances with REST APIs (sometimes referred to as JSON Data API)."}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"MicroStrategy Web Functions"}),(0,s.jsx)(e.th,{children:"REST API Operators"}),(0,s.jsx)(e.th,{children:"Function"}),(0,s.jsx)(e.th,{children:"Operands Count"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Equals"}),(0,s.jsx)(e.td,{children:"Equals"}),(0,s.jsx)(e.td,{children:"="}),(0,s.jsx)(e.td,{children:"2"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Does not equal"}),(0,s.jsx)(e.td,{children:"NotEqual"}),(0,s.jsx)(e.td,{children:"!="}),(0,s.jsx)(e.td,{children:"2"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Greater than"}),(0,s.jsx)(e.td,{children:"Greater"}),(0,s.jsx)(e.td,{children:">"}),(0,s.jsx)(e.td,{children:"2"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Less than"}),(0,s.jsx)(e.td,{children:"Less"}),(0,s.jsx)(e.td,{children:"<"}),(0,s.jsx)(e.td,{children:"2"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Greater than or equal to"}),(0,s.jsx)(e.td,{children:"GreaterEqual"}),(0,s.jsx)(e.td,{children:">="}),(0,s.jsx)(e.td,{children:"2"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Less than or equal to"}),(0,s.jsx)(e.td,{children:"LessEqual"}),(0,s.jsx)(e.td,{children:"<="}),(0,s.jsx)(e.td,{children:"2"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Between"}),(0,s.jsx)(e.td,{children:"Between"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{children:"3"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Not between"}),(0,s.jsx)(e.td,{children:"NotBetween"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{children:"3"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Is null"}),(0,s.jsx)(e.td,{children:"IsNull"}),(0,s.jsx)(e.td,{children:"null"}),(0,s.jsx)(e.td,{children:"1"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Is not null"}),(0,s.jsx)(e.td,{children:"IsNotNull"}),(0,s.jsx)(e.td,{children:"notnull"}),(0,s.jsx)(e.td,{children:"1"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Highest"}),(0,s.jsx)(e.td,{children:"Rant.Top"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{children:"2"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Lowest"}),(0,s.jsx)(e.td,{children:"Rank.Bottom"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{children:"2"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Highest (%)"}),(0,s.jsx)(e.td,{children:"Percent.Top"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{children:"2"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Lowest (%)"}),(0,s.jsx)(e.td,{children:"Percent.Bottom"}),(0,s.jsx)(e.td,{}),(0,s.jsx)(e.td,{children:"2"})]})]})]})]})}function h(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(a,{...t})}):a(t)}},28453:(t,e,r)=>{r.d(e,{R:()=>d,x:()=>c});var s=r(96540);const n={},i=s.createContext(n);function d(t){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:d(t.components),s.createElement(i.Provider,{value:e},t.children)}}}]);