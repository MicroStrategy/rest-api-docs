"use strict";(self.webpackChunkrest_api_docs=self.webpackChunkrest_api_docs||[]).push([[7386],{3905:function(e,t,a){a.d(t,{Zo:function(){return i},kt:function(){return u}});var o=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},r=Object.keys(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=o.createContext({}),m=function(e){var t=o.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},i=function(e){var t=m(e.components);return o.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),d=m(a),u=n,h=d["".concat(c,".").concat(u)]||d[u]||p[u]||r;return a?o.createElement(h,s(s({ref:t},i),{},{components:a})):o.createElement(h,s({ref:t},i))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,s=new Array(r);s[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var m=2;m<r;m++)s[m]=a[m];return o.createElement.apply(null,s)}return o.createElement.apply(null,a)}d.displayName="MDXCreateElement"},52833:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return m},default:function(){return y},frontMatter:function(){return c},metadata:function(){return i},toc:function(){return d}});var o,n=a(83117),r=a(80102),s=(a(67294),a(3905)),l=["components"],c={title:"Reload the schema asynchronously",description:"This workflow sample demonstrates how to reload (update) the schema asynchronously."},m=void 0,i={unversionedId:"common-workflows/modeling/common-object-management/manage-the-schema/reload-the-schema-asynchronously",id:"common-workflows/modeling/common-object-management/manage-the-schema/reload-the-schema-asynchronously",title:"Reload the schema asynchronously",description:"This workflow sample demonstrates how to reload (update) the schema asynchronously.",source:"@site/docs/common-workflows/modeling/common-object-management/manage-the-schema/reload-the-schema-asynchronously.md",sourceDirName:"common-workflows/modeling/common-object-management/manage-the-schema",slug:"/common-workflows/modeling/common-object-management/manage-the-schema/reload-the-schema-asynchronously",permalink:"/rest-api-docs/common-workflows/modeling/common-object-management/manage-the-schema/reload-the-schema-asynchronously",draft:!1,editUrl:"https://github.com/MicroStrategy/rest-api-docs/tree/public/docs/common-workflows/modeling/common-object-management/manage-the-schema/reload-the-schema-asynchronously.md",tags:[],version:"current",lastUpdatedBy:"Holmblad, Darren",lastUpdatedAt:1695923197,formattedLastUpdatedAt:"Sep 28, 2023",frontMatter:{title:"Reload the schema asynchronously",description:"This workflow sample demonstrates how to reload (update) the schema asynchronously."},sidebar:"tutorialSidebar",previous:{title:"Reload the schema synchronously",permalink:"/rest-api-docs/common-workflows/modeling/common-object-management/manage-the-schema/reload-the-schema-synchronously"},next:{title:"Changesets",permalink:"/rest-api-docs/common-workflows/modeling/changesets"}},p={},d=[{value:"Reload (update) the schema asynchronously",id:"reload-update-the-schema-asynchronously",level:2},{value:"Check the status of the schema reload (update)",id:"check-the-status-of-the-schema-reload-update",level:2}],u=(o="Available",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",e)}),h={toc:d};function y(e){var t=e.components,a=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)(u,{since:"2021 Update 1",mdxType:"Available"}),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"You can try out this workflow at ",(0,s.kt)("a",{parentName:"p",href:"https://www.postman.com/microstrategysdk/workspace/microstrategy-rest-api/folder/16131298-edc29ca6-4db8-4a8b-988e-11d9583ed993?ctx=documentation"},"REST API Playground"),"."),(0,s.kt)("p",{parentName:"admonition"},"Learn more about MicroStrategy REST API Playground ",(0,s.kt)("a",{parentName:"p",href:"/rest-api-docs/getting-started/playground"},"here"),".")),(0,s.kt)("p",null,"This workflow sample demonstrates how to reload (update) the schema asynchronously."),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("a",{parentName:"li",href:"#reload-update-the-schema-asynchronously"},"Reload (update) the schema asynchronously.")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("a",{parentName:"li",href:"#check-the-status-of-the-schema-reload-update"},"Check the status of the schema reload (update)."))),(0,s.kt)("p",null,"You want to reload (update) the schema asynchronously in the MicroStrategy Tutorial project. The project ID is ",(0,s.kt)("inlineCode",{parentName:"p"},"B7CA92F04B9FAE8D941C3E9B7E0CD754"),"."),(0,s.kt)("p",null,"Get the authorization token needed to execute the request with ",(0,s.kt)("a",{parentName:"p",href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Authentication/postLogin"},"POST /api/auth/login"),"."),(0,s.kt)("p",null,"Get the project ID from ",(0,s.kt)("a",{parentName:"p",href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Projects/getProjects_1"},"GET /api/projects"),"."),(0,s.kt)("h2",{id:"reload-update-the-schema-asynchronously"},"Reload (update) the schema asynchronously"),(0,s.kt)("p",null,"Use ",(0,s.kt)("a",{parentName:"p",href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Schema/ms-schemaReload"},"POST /api/model/schema/reload")),(0,s.kt)("p",null,"Sample Request Header:"),(0,s.kt)("p",null,"Set ",(0,s.kt)("inlineCode",{parentName:"p"},"Prefer")," to ",(0,s.kt)("inlineCode",{parentName:"p"},"respond-async")," to execute this API asynchronously. Use GET Tasks APIs to check the status of the task."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-http"},'"accept": "application/json"\n"X-MSTR-AuthToken": "ouddou5qdd421ndfpjqd6ssman"\n"X-MSTR-ProjectID": "B7CA92F04B9FAE8D941C3E9B7E0CD754\n"Prefer": "respond-async"\n')),(0,s.kt)("p",null,"Sample Request Body"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"updateTypes")," is required in the request body. This field can be empty, contain any of the following options, or all of them:",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"table_key"),": Use this option if you changed the key structure of a table."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"entry_level"),": Use this option if you changed the level at which a fact is stored."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"logical_size"),": Use this option to recalculate logical table sizes and override any modifications you made to logical table sizes.")))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "updateTypes": ["table_key", "entry_level", "logical_size"]\n}\n')),(0,s.kt)("p",null,"Sample Curl:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST "https://demo.microstrategy.com/MicroStrategyLibrary/api/model/schema/reload" \\\n-H "accept: application/json" \\\n-H "X-MSTR-AuthToken: ouddou5qdd421ndfpjqd6ssman" \\\n-H "Prefer: respond-async" \\\n-H "X-MSTR-ProjectID: B7CA92F04B9FAE8D941C3E9B7E0CD754" \\\n-H "Content-Type: application/json" \\\n-d \'{"updateTypes":["table_key","entry_level","logical_size"]}\'\n')),(0,s.kt)("p",null,"Sample Response Body:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "907CAAF6F0644A8DA2CBF9D3C4C1B12E",\n  "task": "reloadSchema",\n  "startTime": "2021-03-24T02:05:14.236396Z",\n  "status": "running"\n}\n')),(0,s.kt)("p",null,"Response Code: 202 (The schema reload (asynchronous) request is accepted.)"),(0,s.kt)("h2",{id:"check-the-status-of-the-schema-reload-update"},"Check the status of the schema reload (update)"),(0,s.kt)("p",null,"Use ",(0,s.kt)("a",{parentName:"p",href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Schema/ms-getTask"},"GET /api/model/tasks/{taskId}")),(0,s.kt)("p",null,"Sample Request Header:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-http"},'"accept": "application/json"\n"X-MSTR-AuthToken": "ouddou5qdd421ndfpjqd6ssman"\n"X-MSTR-ProjectID": "B7CA92F04B9FAE8D941C3E9B7E0CD754\n"taskId": "907CAAF6F0644A8DA2CBF9D3C4C1B12E"\n')),(0,s.kt)("p",null,"Sample Request Body: Empty"),(0,s.kt)("p",null,"Sample Curl:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET "https://demo.microstrategy.com/MicroStrategyLibrary/api/model/tasks/907CAAF6F0644A8DA2CBF9D3C4C1B12E" -H "accept: application/json" -H "X-MSTR-AuthToken: ouddou5qdd421ndfpjqd6ssman" -H "X-MSTR-ProjectID: B7CA92F04B9FAE8D941C3E9B7E0CD754"\n')),(0,s.kt)("p",null,"Sample Response Body:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "907CAAF6F0644A8DA2CBF9D3C4C1B12E",\n  "task": "reloadSchema",\n  "startTime": "2021-03-24T02:05:14.236396Z",\n  "endTime": "2021-03-24T02:05:15.740630Z",\n  "status": "completed"\n}\n')),(0,s.kt)("p",null,"Response Code: 200 (The task execution has completed or failed.)"))}y.isMDXComponent=!0}}]);