"use strict";(self.webpackChunkrest_api_docs=self.webpackChunkrest_api_docs||[]).push([[7366],{67254:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>n,metadata:()=>s,toc:()=>c});var i=r(74848),a=r(28453);const n={title:"Manage attribute relationships",description:"You can use REST API requests to retrieve, create and update an attribute's relationship through the Modeling service."},o=void 0,s={id:"common-workflows/modeling/manage-attribute-relationships/manage-attribute-relationships",title:"Manage attribute relationships",description:"You can use REST API requests to retrieve, create and update an attribute's relationship through the Modeling service.",source:"@site/docs/common-workflows/modeling/manage-attribute-relationships/manage-attribute-relationships.md",sourceDirName:"common-workflows/modeling/manage-attribute-relationships",slug:"/common-workflows/modeling/manage-attribute-relationships/",permalink:"/rest-api-docs/common-workflows/modeling/manage-attribute-relationships/",draft:!1,unlisted:!1,editUrl:"https://github.com/MicroStrategy/rest-api-docs/tree/public/docs/common-workflows/modeling/manage-attribute-relationships/manage-attribute-relationships.md",tags:[],version:"current",lastUpdatedBy:"wangrenhang",lastUpdatedAt:1711017072,formattedLastUpdatedAt:"Mar 21, 2024",frontMatter:{title:"Manage attribute relationships",description:"You can use REST API requests to retrieve, create and update an attribute's relationship through the Modeling service."},sidebar:"tutorialSidebar",previous:{title:"Modify value of an advanced property of the attribute",permalink:"/rest-api-docs/common-workflows/modeling/manage-attribute-objects/update-attribute-advanced-property"},next:{title:"Retrieve an attribute's relationships",permalink:"/rest-api-docs/common-workflows/modeling/manage-attribute-relationships/retrieve-an-attributes-relationships"}},l={},c=[];function d(e){const t={a:"a",admonition:"admonition",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components},{Available:r}=t;return r||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Available",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r,{since:"2021 Update 1"}),"\n",(0,i.jsxs)(t.admonition,{type:"tip",children:[(0,i.jsxs)(t.p,{children:["You can try these workflows with ",(0,i.jsx)(t.a,{href:"https://www.postman.com/microstrategysdk/workspace/microstrategy-rest-api/folder/16131298-697327d8-4eaa-48ef-9e75-3daa23d4860f?ctx=documentation",children:"REST API Playground"}),"."]}),(0,i.jsxs)(t.p,{children:["Learn more about MicroStrategy REST API Playground ",(0,i.jsx)(t.a,{href:"/rest-api-docs/getting-started/playground",children:"here"}),"."]})]}),"\n",(0,i.jsx)(t.p,{children:"You can use REST API requests to retrieve, create and update an attribute's relationship through the Modeling service:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/rest-api-docs/common-workflows/modeling/manage-attribute-relationships/retrieve-an-attributes-relationships",children:"Retrieve an attribute's relationships"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/rest-api-docs/common-workflows/modeling/manage-attribute-relationships/retrieve-an-attributes-relationships-within-a-changeset",children:"Retrieve an attribute's relationships within a changeset"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/rest-api-docs/common-workflows/modeling/manage-attribute-relationships/update-an-attributes-relationships",children:"Update an attribute's relationships"})}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["For more information about the Modeling service, see ",(0,i.jsx)(t.a,{href:"https://www2.microstrategy.com/producthelp/Current/InstallConfig/en-us/Content/modeling_service.htm",children:"Configuring the Modeling Service"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>s});var i=r(96540);const a={},n=i.createContext(a);function o(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);