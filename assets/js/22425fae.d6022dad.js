"use strict";(self.webpackChunkrest_api_docs=self.webpackChunkrest_api_docs||[]).push([[6482],{95716:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var t=r(74848),i=r(28453);const o={title:"Sample workflow: Create an incremental refresh report",sidebar_label:"Create an IRR",description:"This workflow sample demonstrates how to create a new Incremental Refresh Report object through the Modeling service."},s=void 0,c={id:"common-workflows/analytics/manage-reports/manage-incremental-refresh-report/create-an-irr",title:"Sample workflow: Create an incremental refresh report",description:"This workflow sample demonstrates how to create a new Incremental Refresh Report object through the Modeling service.",source:"@site/docs/common-workflows/analytics/manage-reports/manage-incremental-refresh-report/create-an-irr.md",sourceDirName:"common-workflows/analytics/manage-reports/manage-incremental-refresh-report",slug:"/common-workflows/analytics/manage-reports/manage-incremental-refresh-report/create-an-irr",permalink:"/rest-api-docs/common-workflows/analytics/manage-reports/manage-incremental-refresh-report/create-an-irr",draft:!1,unlisted:!1,editUrl:"https://github.com/MicroStrategy/rest-api-docs/tree/public/docs/common-workflows/analytics/manage-reports/manage-incremental-refresh-report/create-an-irr.md",tags:[],version:"current",lastUpdatedBy:"ziyuhehe",lastUpdatedAt:1710490354,formattedLastUpdatedAt:"Mar 15, 2024",frontMatter:{title:"Sample workflow: Create an incremental refresh report",sidebar_label:"Create an IRR",description:"This workflow sample demonstrates how to create a new Incremental Refresh Report object through the Modeling service."},sidebar:"tutorialSidebar",previous:{title:"Retrieve an IRR definition",permalink:"/rest-api-docs/common-workflows/analytics/manage-reports/manage-incremental-refresh-report/retrieve-an-irr-definition"},next:{title:"Update an IRR definition",permalink:"/rest-api-docs/common-workflows/analytics/manage-reports/manage-incremental-refresh-report/update-an-irr-definition"}},a={},d=[{value:"Create a new incremental refresh report using POST /api/model/incrementalRefresh",id:"create-a-new-incremental-refresh-report-using-post-apimodelincrementalrefresh",level:2},{value:"The model for the definition of the incremental refresh report",id:"the-model-for-the-definition-of-the-incremental-refresh-report",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components},{Available:o}=n;return o||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Available",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o,{since:"2021 Update 6"}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsxs)(n.p,{children:["You can try out this workflow at ",(0,t.jsx)(n.a,{href:"https://www.postman.com/microstrategysdk/workspace/microstrategy-rest-api/folder/16131298-54f5b582-05ac-4f2d-88f9-98f36dd8373c?ctx=documentation",children:"REST API Playground"}),"."]}),(0,t.jsxs)(n.p,{children:["Learn more about MicroStrategy REST API Playground ",(0,t.jsx)(n.a,{href:"/rest-api-docs/getting-started/playground",children:"here"}),"."]})]}),"\n",(0,t.jsx)(n.p,{children:"This workflow sample demonstrates how to create a new Incremental Refresh Report object through the Modeling service."}),"\n",(0,t.jsxs)(n.p,{children:["You want to create a new Incremental Refresh Report as defined in the below screenshot and name it ",(0,t.jsx)(n.code,{children:"\u201cYearInList_Insert"})," in the destination folder of ",(0,t.jsx)(n.code,{children:"31727EF14E35DAA437B716BA56466585"}),". The target cube of the Incremental Refresh Report is called ",(0,t.jsx)(n.code,{children:"Year_Country_Category_3"})," with the object ID of ",(0,t.jsx)(n.code,{children:"F71F4C0E4B8F73B143B0DD83EEB47F43"}),". The project ID is ",(0,t.jsx)(n.code,{children:"B7CA92F04B9FAE8D941C3E9B7E0CD754"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"IRR Report Editor 2",src:r(47859).A+"",width:"900",height:"569"})}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"An authorization token allows the API layer to hide internal session-related implementations such as managing different project-specific sessions. Once the REST API layer has validated the user's credentials using the specified authentication mode, it initiates a session with the Intelligence server and creates a unique authorization token for the client."}),(0,t.jsxs)(n.p,{children:["Get the authorization token needed to execute the request with ",(0,t.jsx)(n.a,{href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Authentication/postLogin",children:"POST /api/auth/login"}),"."]}),(0,t.jsxs)(n.p,{children:["Get the project ID from ",(0,t.jsx)(n.a,{href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Projects/getProjects_1",children:"GET /api/projects"}),"."]})]}),"\n",(0,t.jsxs)(n.h2,{id:"create-a-new-incremental-refresh-report-using-post-apimodelincrementalrefresh",children:["Create a new incremental refresh report using ",(0,t.jsx)(n.a,{href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Cubes/ms-createIncrementalRefreshReport",children:"POST /api/model/incrementalRefresh"})]}),"\n",(0,t.jsx)(n.p,{children:"To create the new Incremental Refresh Report, you must submit the request body with the correct information."}),"\n",(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"information"}),", you must provide the ",(0,t.jsx)(n.code,{children:"name"}),", ",(0,t.jsx)(n.code,{children:"subtype"}),", and ",(0,t.jsx)(n.code,{children:"destinationFolderID"})," for the Incremental Refresh Report you want to create. In ",(0,t.jsx)(n.code,{children:"targetCube"}),", you must provide the information for the base cube that the Incremental Refresh Report is built on."]}),"\n",(0,t.jsx)(n.p,{children:"Sample Request Header:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:'"accept": "application/json"\n"X-MSTR-AuthToken": "bbjpsjos3b7ebokq9jdfvknska"\n"X-MSTR-ProjectID": "B7CA92F04B9FAE8D941C3E9B7E0CD754"\n"Content-Type": "application/json"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Sample Request Body:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "information": {\n    "destinationFolderId": "DD7E4D4346866BFBBFA5078DACD21A36",\n    "subType": "report_increment_refresh",\n    "name": "YearInList_Insert"\n  },\n  "targetCube": {\n    "objectId": "F71F4C0E4B8F73B143B0DD83EEB47F43",\n    "subType": "report_cube"\n  },\n  "incrementType": "filter",\n  "refreshType": "insert",\n  "filter": {\n    "text": "Year <> 2014, 2015",\n    "tree": {\n      "type": "predicate_element_list",\n      "predicateId": "3CFB65D310F44BF0ADDB37E5F5005CF9",\n      "predicateTree": {\n        "attribute": {\n          "objectId": "8D679D5111D3E4981000E787EC6DE8A4",\n          "subType": "attribute",\n          "name": "Year"\n        },\n        "elements": [\n          {\n            "display": "2014",\n            "elementId": "h2014"\n          },\n          {\n            "display": "2015",\n            "elementId": "h2015"\n          }\n        ],\n        "function": "not_in"\n      }\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Sample Curl:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'curl -X POST "http://10.23.33.151:8080/MicroStrategyLibrary/api/model/incrementalRefresh" \\\n-H "accept: application/json" \\\n-H "X-MSTR-AuthToken: 7frmogrqns31jsc9l5gvd6qj6f" \\\n-H "X-MSTR-ProjectID: B7CA92F04B9FAE8D941C3E9B7E0CD754" \\\n-H "Content-Type: application/json" \\\n-d \'{"information":{"destinationFolderId":"DD7E4D4346866BFBBFA5078DACD21A36","subType":"report_increment_refresh","name":"YearInList_Insert"},"targetCube":{"objectId":"F71F4C0E4B8F73B143B0DD83EEB47F43","subType":"report_cube"},"incrementType":"filter","refreshType":"insert","filter":{"text":"Year <> 2014, 2015","tree":{"type":"predicate_element_list","predicateId":"3CFB65D310F44BF0ADDB37E5F5005CF9","predicateTree":{"attribute":{"objectId":"8D679D5111D3E4981000E787EC6DE8A4","subType":"attribute","name":"Year"},"elements":[{"display":"2014","elementId":"h2014"},{"display":"2015","elementId":"h2015"}],"function":"not_in"}}}}\'\n'})}),"\n",(0,t.jsx)(n.p,{children:"Sample Response Body:"}),"\n",(0,t.jsx)(n.p,{children:"You can view the new Incremental Refresh Report definition in the body of the response."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "information": {\n    "dateCreated": "2022-05-27T08:05:11.098Z",\n    "dateModified": "2022-05-27T08:05:11.098Z",\n    "versionId": "63B0740B4174A00676908F9BBAC1471A",\n    "primaryLocale": "en-US",\n    "objectId": "9597ED4646F66780A6AA059CE1159D7F",\n    "subType": "report_increment_refresh",\n    "name": "YearInList_Insert"\n  },\n  "targetCube": {\n    "objectId": "F71F4C0E4B8F73B143B0DD83EEB47F43",\n    "subType": "report_cube",\n    "name": "IC01_Year+Country+Category+3Metrics"\n  },\n  "incrementType": "filter",\n  "refreshType": "insert",\n  "filter": {\n    "text": "Year <> 2014, 2015",\n    "tree": {\n      "type": "predicate_element_list",\n      "predicateId": "BC02C58528CA46338014CA9BDD5F780A",\n      "predicateTree": {\n        "attribute": {\n          "objectId": "8D679D5111D3E4981000E787EC6DE8A4",\n          "subType": "attribute",\n          "name": "Year"\n        },\n        "elements": [\n          {\n            "display": "2014",\n            "elementId": "h2014"\n          },\n          {\n            "display": "2015",\n            "elementId": "h2015"\n          }\n        ],\n        "function": "not_in"\n      }\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Response Code: 201 (An Incremental Refresh Report is created successfully.)"}),"\n",(0,t.jsx)(n.h2,{id:"the-model-for-the-definition-of-the-incremental-refresh-report",children:"The model for the definition of the incremental refresh report"}),"\n",(0,t.jsx)(n.p,{children:"The model for the definition of the Incremental Refresh Report can be represented with the following fields."}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"objectID"}),", ",(0,t.jsx)(n.code,{children:"dateCreated"}),", ",(0,t.jsx)(n.code,{children:"dateModified"}),", and ",(0,t.jsx)(n.code,{children:"versionId"})," are generated automatically. As of MicroStrategy 2021 Update 6, only ",(0,t.jsx)(n.code,{children:"en-US"})," is available for ",(0,t.jsx)(n.code,{children:"primaryLocale"}),"."]})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["(Required) ",(0,t.jsx)(n.code,{children:"information"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["(Required) ",(0,t.jsx)(n.code,{children:"name"})," (",(0,t.jsx)(n.code,{children:"String"}),") - Name of the IRR. This is the most user-friendly value that can be used to identify the IRR."]}),"\n",(0,t.jsxs)(n.li,{children:["(Required) ",(0,t.jsx)(n.code,{children:"subtype"})," (",(0,t.jsx)(n.code,{children:"String"}),") - For IRR, ",(0,t.jsx)(n.code,{children:"subType"})," is ",(0,t.jsx)(n.code,{children:"report_increment_refresh"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["(Required) ",(0,t.jsx)(n.code,{children:"destinationFolderId"})," (",(0,t.jsx)(n.code,{children:"String"}),") - Folder ID where the new IRR is saved."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["(Required) ",(0,t.jsx)(n.code,{children:"targetCube"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["(Required) ",(0,t.jsx)(n.code,{children:"objectID"})," (",(0,t.jsx)(n.code,{children:"String"}),") - The object ID of the target cube that the IRR is built on."]}),"\n",(0,t.jsxs)(n.li,{children:["(Required) ",(0,t.jsx)(n.code,{children:"subtype"})," (",(0,t.jsx)(n.code,{children:"String"}),") - The ",(0,t.jsx)(n.code,{children:"subtype"})," of the target cube must be ",(0,t.jsx)(n.code,{children:"report_cube"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"})," (",(0,t.jsx)(n.code,{children:"String"}),") - The name of the target cube."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"incrementType"})," (",(0,t.jsx)(n.code,{children:"String"}),") - The incremental type for IRR, which can only be a filter and report."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"refreshType"})," (",(0,t.jsx)(n.code,{children:"String"}),") - The refresh type for IRR, which can only be ",(0,t.jsx)(n.code,{children:"update"}),", ",(0,t.jsx)(n.code,{children:"insert"}),", ",(0,t.jsx)(n.code,{children:"delete"}),", ",(0,t.jsx)(n.code,{children:"update_only"}),", and ",(0,t.jsx)(n.code,{children:"replace"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"filter"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"text"})," (",(0,t.jsx)(n.code,{children:"String"}),") - The text of the filter name."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tree"})," (",(0,t.jsx)(n.code,{children:"ExpressionNode"}),") - A tree data structure fully defining the filter."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tokens"})," (",(0,t.jsx)(n.code,{children:"List<ExpressionToken>"}),") - A list of parsed tokens for the filter."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"template"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rows"})," (",(0,t.jsx)(n.code,{children:"List<Objects>"}),") - A list of objects on the row of IRR template."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"columns"})," (",(0,t.jsx)(n.code,{children:"List<Objects>"}),") - A list of objects on the column of IRR template."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"pageby"})," (",(0,t.jsx)(n.code,{children:"List<Objects>"}),") - A list of objects on the pageby of IRR template."]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},47859:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/irr_report_editor2-37ba90ce1ab82cd1b1ac974cea93cc89.png"},28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var t=r(96540);const i={},o=t.createContext(i);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);