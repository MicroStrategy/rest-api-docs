"use strict";(self.webpackChunkrest_api_docs=self.webpackChunkrest_api_docs||[]).push([[1649],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return d}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},m=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),f=p(t),d=i,u=f["".concat(c,".").concat(d)]||f[d]||l[d]||o;return t?r.createElement(u,a(a({ref:n},m),{},{components:t})):r.createElement(u,a({ref:n},m))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=f;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var p=2;p<o;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},865:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return p},default:function(){return g},frontMatter:function(){return c},metadata:function(){return m},toc:function(){return f}});var r,i=t(3117),o=t(102),a=(t(7294),t(3905)),s=["components"],c={title:"Retrieve a specific fence",description:"This workflow sample demonstrates how to retrieve a specific user or workload fence."},p=void 0,m={unversionedId:"common-workflows/administration/server-management/manage-fences/retrieve-specific-fence",id:"common-workflows/administration/server-management/manage-fences/retrieve-specific-fence",title:"Retrieve a specific fence",description:"This workflow sample demonstrates how to retrieve a specific user or workload fence.",source:"@site/docs/common-workflows/administration/server-management/manage-fences/retrieve-specific-fence.md",sourceDirName:"common-workflows/administration/server-management/manage-fences",slug:"/common-workflows/administration/server-management/manage-fences/retrieve-specific-fence",permalink:"/rest-api-docs/common-workflows/administration/server-management/manage-fences/retrieve-specific-fence",draft:!1,editUrl:"https://github.com/MicroStrategy/rest-api-docs/tree/public/docs/common-workflows/administration/server-management/manage-fences/retrieve-specific-fence.md",tags:[],version:"current",lastUpdatedBy:"elinmstr",lastUpdatedAt:1675877015,formattedLastUpdatedAt:"Feb 8, 2023",frontMatter:{title:"Retrieve a specific fence",description:"This workflow sample demonstrates how to retrieve a specific user or workload fence."},sidebar:"tutorialSidebar",previous:{title:"Retrieve the list of fences",permalink:"/rest-api-docs/common-workflows/administration/server-management/manage-fences/retrieve-list-of-fences"},next:{title:"Create a new fence",permalink:"/rest-api-docs/common-workflows/administration/server-management/manage-fences/create-fence"}},l={},f=[{value:"Get the detailed information of a specific fence",id:"get-the-detailed-information-of-a-specific-fence",level:2}],d=(r="Available",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)}),u={toc:f};function g(e){var n=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(d,{since:"2021 Update 6",mdxType:"Available"}),(0,a.kt)("p",null,"You want to get the detailed information of ",(0,a.kt)("inlineCode",{parentName:"p"},"administrator_user_fence")," user fence based on the fence name, which reserves ",(0,a.kt)("inlineCode",{parentName:"p"},"env-296739laio1use1")," node and configured for ",(0,a.kt)("inlineCode",{parentName:"p"},"Administrator")," user/usergroups."),(0,a.kt)("p",null,"The user ID is ",(0,a.kt)("inlineCode",{parentName:"p"},"54F3D26011D2896560009A8E67019608"),". The usergroup ID is ",(0,a.kt)("inlineCode",{parentName:"p"},"E96685CD4E60068559F7DFAC7C2AA851"),"."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www2.microstrategy.com/producthelp/Current/WebAPIReference/com/microstrategy/webapi/EnumDSSXMLPrivilegeTypes.html#DssXmlPrivilegesConfigureServerBasic"},"DssXmlPrivilegesConfigureServerBasic")," and ",(0,a.kt)("a",{parentName:"p",href:"https://www2.microstrategy.com/producthelp/Current/WebAPIReference/com/microstrategy/webapi/EnumDSSXMLPrivilegeTypes.html#DssXmlPrivilegesUseClusterMonitor"},"DssXmlPrivilegesUseClusterMonitor")," privileges are required to retrieve a specific user fence."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Obtain the authorization token needed to execute the request using ",(0,a.kt)("a",{parentName:"p",href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Authentication/postLogin"},"POST\xa0/api/auth/login"),".")),(0,a.kt)("h2",{id:"get-the-detailed-information-of-a-specific-fence"},"Get the detailed information of a specific fence"),(0,a.kt)("p",null,"Endpoint: ",(0,a.kt)("a",{parentName:"p",href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/System%20Administration/getFence"},"GET /api/iserver/fences/{name}"),"."),(0,a.kt)("p",null,"Sample Request Header:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-http"},'"accept": "application/json"\n"X-MSTR-AuthToken": "g97nfc2l7icgsb37vjdh4b6gcu"\n')),(0,a.kt)("p",null,"Sample Request Body: Empty"),(0,a.kt)("p",null,"Sample Curl:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl -X GET \\\n'https://demo.microstrategy.com/MicroStrategyLibrary/api/iserver/fences/administrator_user_fence' \\\n-H 'accept: application/json' \\\n-H 'X-MSTR-AuthToken: g97nfc2l7icgsb37vjdh4b6gcu'\n")),(0,a.kt)("p",null,"Sample Response Body:"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"users")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"usergroups")," can be configured only for user fence, therefore the response body for workload fence should contain empty ",(0,a.kt)("inlineCode",{parentName:"p"},"users")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"usergroups")," fields.")),(0,a.kt)("p",null,"You can view the detailed information of ",(0,a.kt)("inlineCode",{parentName:"p"},"administrator_user_fence")," user fence in the body of the response. The detailed information includes ",(0,a.kt)("inlineCode",{parentName:"p"},"rank"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"name"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"type"),", reserved ",(0,a.kt)("inlineCode",{parentName:"p"},"nodes"),", configured ",(0,a.kt)("inlineCode",{parentName:"p"},"users"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"usergroups")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"projects"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "rank": 1,\n  "name": "administrator_user_fence",\n  "type": "user_fence",\n  "nodes": ["env-295232laiouse1"],\n  "users": [\n    {\n      "id": "54F3D26011D2896560009A8E67019608",\n      "name": "Administrator"\n    }\n  ],\n  "usergroups": [\n    {\n      "id": "E96685CD4E60068559F7DFAC7C2AA851",\n      "name": "Administrator"\n    }\n  ],\n  "projects": [\n    {\n      "id": "B7CA92F04B9FAE8D941C3E9B7E0CD754",\n      "name": "MicroStrategy Tutorial"\n    }\n  ]\n}\n')),(0,a.kt)("p",null,"Response Code: 200 (The detailed information of a given fence is returned successfully.)"))}g.isMDXComponent=!0}}]);