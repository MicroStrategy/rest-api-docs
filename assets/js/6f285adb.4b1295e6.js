"use strict";(self.webpackChunkrest_api_docs=self.webpackChunkrest_api_docs||[]).push([[1950],{50027:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var i=t(74848),r=t(28453);const a={title:"Retrieve a cube's definition",sidebar_label:"Retrieve a cube's definition",description:"This topic cover several workflows for retrieving a cube's definition. Retrieve a Cube's Definition, Retrieve a Cube Definition with a Filter in Tokens Format, Retrieve a Cube Definition with a Filter Custom Expression in Tree and Tokens Formats, Retrieve a Cube Definition with a Filter that Contains Inline Custom Expressions Returned in Tree and Tokens Formats, Retrieve a Cube Definition with Advanced Properties and Retrieve Applicable Properties of a Cube."},s=void 0,o={id:"common-workflows/analytics/manage-datasets/manage-cube-objects/retrieve-a-cube-definition",title:"Retrieve a cube's definition",description:"This topic cover several workflows for retrieving a cube's definition. Retrieve a Cube's Definition, Retrieve a Cube Definition with a Filter in Tokens Format, Retrieve a Cube Definition with a Filter Custom Expression in Tree and Tokens Formats, Retrieve a Cube Definition with a Filter that Contains Inline Custom Expressions Returned in Tree and Tokens Formats, Retrieve a Cube Definition with Advanced Properties and Retrieve Applicable Properties of a Cube.",source:"@site/docs/common-workflows/analytics/manage-datasets/manage-cube-objects/retrieve-a-cube-definition.md",sourceDirName:"common-workflows/analytics/manage-datasets/manage-cube-objects",slug:"/common-workflows/analytics/manage-datasets/manage-cube-objects/retrieve-a-cube-definition",permalink:"/rest-api-docs/common-workflows/analytics/manage-datasets/manage-cube-objects/retrieve-a-cube-definition",draft:!1,unlisted:!1,editUrl:"https://github.com/MicroStrategy/rest-api-docs/tree/public/docs/common-workflows/analytics/manage-datasets/manage-cube-objects/retrieve-a-cube-definition.md",tags:[],version:"current",lastUpdatedBy:"AugLychee",lastUpdatedAt:1710818077,formattedLastUpdatedAt:"Mar 19, 2024",frontMatter:{title:"Retrieve a cube's definition",sidebar_label:"Retrieve a cube's definition",description:"This topic cover several workflows for retrieving a cube's definition. Retrieve a Cube's Definition, Retrieve a Cube Definition with a Filter in Tokens Format, Retrieve a Cube Definition with a Filter Custom Expression in Tree and Tokens Formats, Retrieve a Cube Definition with a Filter that Contains Inline Custom Expressions Returned in Tree and Tokens Formats, Retrieve a Cube Definition with Advanced Properties and Retrieve Applicable Properties of a Cube."},sidebar:"tutorialSidebar",previous:{title:"Manage cube objects",permalink:"/rest-api-docs/common-workflows/analytics/manage-datasets/manage-cube-objects/"},next:{title:"Create a cube object",permalink:"/rest-api-docs/common-workflows/analytics/manage-datasets/manage-cube-objects/create-a-cube-object"}},c={},l=[{value:"Retrieve a cube&#39;s definition",id:"retrieve-a-cubes-definition",level:2},{value:"Retrieve a cube\u2019s definition with filter in tokens format",id:"retrieve-a-cubes-definition-with-filter-in-tokens-format",level:2},{value:"Retrieve a cube\u2019s definition with filter\u2019s custom expressions in tree and tokens formats",id:"retrieve-a-cubes-definition-with-filters-custom-expressions-in-tree-and-tokens-formats",level:2},{value:"Retrieve a cube\u2019s definition with filter that contains inline custom expressions returned in tree and tokens formats",id:"retrieve-a-cubes-definition-with-filter-that-contains-inline-custom-expressions-returned-in-tree-and-tokens-formats",level:2},{value:"Retrieve a cube definition with advanced properties",id:"retrieve-a-cube-definition-with-advanced-properties",level:2},{value:"Retrieve applicable properties of a cube",id:"retrieve-applicable-properties-of-a-cube",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components},{Available:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Available",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t,{since:"2021 Update 5"}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsxs)(n.p,{children:["You can try out this workflow at ",(0,i.jsx)(n.a,{href:"https://www.postman.com/microstrategysdk/workspace/microstrategy-rest-api/folder/16131298-585d42d1-fbdc-4d1d-afbb-c4e872753709?ctx=documentation",children:"REST API Playground"}),"."]}),(0,i.jsxs)(n.p,{children:["Learn more about MicroStrategy REST API Playground ",(0,i.jsx)(n.a,{href:"/rest-api-docs/getting-started/playground",children:"here"}),"."]})]}),"\n",(0,i.jsx)(n.p,{children:"This topic cover several workflows for retrieving a cube's definition."}),"\n",(0,i.jsx)(n.h2,{id:"retrieve-a-cubes-definition",children:"Retrieve a cube's definition"}),"\n",(0,i.jsx)(t,{since:"2021 Update 5"}),"\n",(0,i.jsx)(n.p,{children:"This workflow sample demonstrates how to retrieve the definition of a cube through the Modeling service."}),"\n",(0,i.jsxs)(n.p,{children:["You want to get the definition of the ",(0,i.jsx)(n.code,{children:"Year, Category Analysis"})," cube object. The object ID of the cube is ",(0,i.jsx)(n.code,{children:"A7D792D54B58C6CB68F192A4A73E317F"})," in the MicroStrategy Tutorial project. The project ID is ",(0,i.jsx)(n.code,{children:"B7CA92F04B9FAE8D941C3E9B7E0CD754"}),"."]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["Get the authorization token needed to execute the request with ",(0,i.jsx)(n.a,{href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Authentication/postLogin",children:"POST /api/auth/login"}),"."]}),(0,i.jsxs)(n.p,{children:["Get the project ID from ",(0,i.jsx)(n.a,{href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Projects/getProjects_1",children:"GET /api/projects"}),"."]})]}),"\n",(0,i.jsxs)(n.p,{children:["Retrieve the cube\u2019s definition using ",(0,i.jsx)(n.code,{children:"GET /api/model/cubes/{cubeId}"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Sample Request Header:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:'    "accept": "application/json"\n    "X-MSTR-AuthToken": "cs0intmf1fgij7ao0v2v0j48e5"\n    "X-MSTR-ProjectID": "B7CA92F04B9FAE8D941C3E9B7E0CD754"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Sample Request Body: Empty"}),"\n",(0,i.jsx)(n.p,{children:"Sample Curl:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X GET "https://demo.microstrategy.com/MicroStrategyLibrary/api/model/cubes/A7D792D54B58C6CB68F192A4A73E317F" \\\n-H "accept: application/json" \\\n-H "X-MSTR-AuthToken: cs0intmf1fgij7ao0v2v0j48e5" \\\n-H "X-MSTR-ProjectID: B7CA92F04B9FAE8D941C3E9B7E0CD754"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Sample Response Body:"}),"\n",(0,i.jsx)(n.p,{children:"You can view the cube\u2019s definition in the body of the response."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "information": {\n    "dateCreated": "2022-03-17T22:47:26.514Z",\n    "dateModified": "2022-03-18T20:13:47.091Z",\n    "versionId": "59EB912782474BDB5706F8A1E70480D5",\n    "primaryLocale": "en-US",\n    "objectId": "A7D792D54B58C6CB68F192A4A73E317F",\n    "subType": "report_cube",\n    "name": "Year, Category Analysis"\n  },\n  "template": {\n    "rows": [\n      {\n        "id": "8D679D5111D3E4981000E787EC6DE8A4",\n        "name": "Year",\n        "type": "attribute"\n      },\n      {\n        "id": "8D679D3711D3E4981000E787EC6DE8A4",\n        "name": "Category",\n        "type": "attribute"\n      }\n    ],\n    "columns": [\n      {\n        "type": "metrics",\n        "elements": [\n          {\n            "id": "7FD5B69611D5AC76C000D98A4CC5F24F",\n            "name": "Cost",\n            "subType": "metric"\n          },\n          {\n            "id": "4C051DB611D3E877C000B3B2D86C964F",\n            "name": "Profit",\n            "subType": "metric"\n          }\n        ]\n      }\n    ],\n    "pageBy": []\n  },\n  "filter": {\n    "text": "(Subcategory = Art & Architecture, Business, Computers, Electronics - Miscellaneous) And (Revenue > 100000)",\n    "tree": {\n      "function": "and",\n      "children": [\n        {\n          "type": "predicate_element_list",\n          "predicateId": "19A2594915FA46F0A895F8DF7EA7E28E",\n          "predicateTree": {\n            "attribute": {\n              "objectId": "8D679D4F11D3E4981000E787EC6DE8A4",\n              "subType": "attribute",\n              "name": "Subcategory"\n            },\n            "elements": [\n              {\n                "display": "Art & Architecture",\n                "elementId": "h11"\n              },\n              {\n                "display": "Business",\n                "elementId": "h12"\n              },\n              {\n                "display": "Computers",\n                "elementId": "h23"\n              },\n              {\n                "display": "Electronics - Miscellaneous",\n                "elementId": "h24"\n              }\n            ],\n            "function": "in"\n          }\n        },\n        {\n          "type": "predicate_metric_qualification",\n          "predicateId": "0DEC3B93550343109F25D5D322591806",\n          "predicateText": "(Revenue > 100000)",\n          "predicateTree": {\n            "function": "greater",\n            "parameters": [\n              {\n                "parameterType": "constant",\n                "constant": {\n                  "type": "double",\n                  "value": "100000.0"\n                }\n              }\n            ],\n            "levelType": "none",\n            "metric": {\n              "objectId": "4C05177011D3E877C000B3B2D86C964F",\n              "subType": "metric",\n              "name": "Revenue"\n            },\n            "metricFunction": "value",\n            "isIndependent": 0,\n            "nullInclude": 0\n          }\n        }\n      ],\n      "type": "operator"\n    }\n  },\n  "options": {\n    "dataLanguages": {\n      "dataLanguageType": "project_default"\n    },\n    "dataRefresh": "replace",\n    "dataPartition": {\n      "partitionAttribute": {},\n      "numberOfPartitions": 0,\n      "fetchDataSlicesInParallel": false\n    }\n  }\n}\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Response Code: 200 (The cube\u2019s definition was returned successfully.)"}),"\n",(0,i.jsx)(n.h2,{id:"retrieve-a-cubes-definition-with-filter-in-tokens-format",children:"Retrieve a cube\u2019s definition with filter in tokens format"}),"\n",(0,i.jsx)(t,{since:"2021 Update 5"}),"\n",(0,i.jsxs)(n.p,{children:["This workflow sample demonstrates how to retrieve the definition of a cube with its filter in tokens format through the Modeling service. Unlike the first workflow, you want to enable the ",(0,i.jsx)(n.code,{children:"showFilterTokens"})," parameter to retrieve the filter's definition in tokens format as well."]}),"\n",(0,i.jsxs)(n.p,{children:["Tokens are a semi-structured representation of MicroStrategy expression text that includes object references. For example, let\u2019s say a filter expression is ",(0,i.jsx)(n.code,{children:"Revenue > Cost"}),". When the filter expression is represented as tokens, the text is broken down into pieces (tokens) with information about what these pieces represent in the metadata: ",(0,i.jsx)(n.code,{children:'("Revenue", Revenue_ID)'}),", ",(0,i.jsx)(n.code,{children:'(">", GreaterThan_ID)'}),", ",(0,i.jsx)(n.code,{children:'("Cost", Cost_ID)'}),"."]}),"\n",(0,i.jsx)(n.p,{children:'A filter\'s "qualification" is presented in the following formats:'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"text"}),": A human-readable, but non-parsable text, describing a filter's qualification."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tree"}),": A tree data structure fully defining the filter's qualification."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tokens"}),": A list of parsed tokens that define a filter's qualification. Note that generating tokens requires additional time."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"showFilterTokens"})," is omitted or false, only ",(0,i.jsx)(n.code,{children:"text"})," and ",(0,i.jsx)(n.code,{children:"tree"})," formats are returned."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"showFilterTokens"})," is true, all ",(0,i.jsx)(n.code,{children:"text"}),", ",(0,i.jsx)(n.code,{children:"tree"}),", and ",(0,i.jsx)(n.code,{children:"tokens"})," formats are returned."]}),"\n",(0,i.jsxs)(n.p,{children:["This workflow sample is similar to ",(0,i.jsx)(n.a,{href:"#retrieve-a-cubes-definition",children:"Retrieve a cube\u2019s definition"}),", except with ",(0,i.jsx)(n.code,{children:"showFilterTokens=true"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Sample Request Header:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:'"accept": "application/json"\n"X-MSTR-AuthToken": "8g9lfiranuc09js0imambijoi0"\n"X-MSTR-ProjectID": "B7CA92F04B9FAE8D941C3E9B7E0CD754"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Sample Request Body: Empty"}),"\n",(0,i.jsx)(n.p,{children:"Sample Curl:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X GET "https://demo.microstrategy.com/MicroStrategyLibrary/api/model/cubes/A7D792D54B58C6CB68F192A4A73E317F?showFilterTokens=true" \\\n-H "accept: application/json" \\\n-H "X-MSTR-AuthToken: cs0intmf1fgij7ao0v2v0j48e5" \\\n-H "X-MSTR-ProjectID: B7CA92F04B9FAE8D941C3E9B7E0CD754"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Sample Response Body:"}),"\n",(0,i.jsx)(n.p,{children:"You can view the cube\u2019s definition in the body of the response."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "information": {\n    "dateCreated": "2022-03-17T22:47:26.514Z",\n    "dateModified": "2022-03-18T20:13:47.091Z",\n    "versionId": "59EB912782474BDB5706F8A1E70480D5",\n    "primaryLocale": "en-US",\n    "objectId": "A7D792D54B58C6CB68F192A4A73E317F",\n    "subType": "report_cube",\n    "name": "Year, Category Analysis"\n  },\n  "template": {\n    "rows": [\n      {\n        "id": "8D679D5111D3E4981000E787EC6DE8A4",\n        "name": "Year",\n        "type": "attribute"\n      },\n      {\n        "id": "8D679D3711D3E4981000E787EC6DE8A4",\n        "name": "Category",\n        "type": "attribute"\n      }\n    ],\n    "columns": [\n      {\n        "type": "metrics",\n        "elements": [\n          {\n            "id": "7FD5B69611D5AC76C000D98A4CC5F24F",\n            "name": "Cost",\n            "subType": "metric"\n          },\n          {\n            "id": "4C051DB611D3E877C000B3B2D86C964F",\n            "name": "Profit",\n            "subType": "metric"\n          }\n        ]\n      }\n    ],\n    "pageBy": []\n  },\n  "filter": {\n    "text": "(Subcategory = Art & Architecture, Business, Computers, Electronics - Miscellaneous) And (Revenue > 100000)",\n    "tree": {\n      "function": "and",\n      "children": [\n        {\n          "type": "predicate_element_list",\n          "predicateId": "D14A8E5D30FB4AB7913C7B115F1B50C6",\n          "predicateTree": {\n            "attribute": {\n              "objectId": "8D679D4F11D3E4981000E787EC6DE8A4",\n              "subType": "attribute",\n              "name": "Subcategory"\n            },\n            "elements": [\n              {\n                "display": "Art & Architecture",\n                "elementId": "h11"\n              },\n              {\n                "display": "Business",\n                "elementId": "h12"\n              },\n              {\n                "display": "Computers",\n                "elementId": "h23"\n              },\n              {\n                "display": "Electronics - Miscellaneous",\n                "elementId": "h24"\n              }\n            ],\n            "function": "in"\n          }\n        },\n        {\n          "type": "predicate_metric_qualification",\n          "predicateId": "D4235D1D5A4440B7A8A356E571D15995",\n          "predicateText": "(Revenue > 100000)",\n          "predicateTree": {\n            "function": "greater",\n            "parameters": [\n              {\n                "parameterType": "constant",\n                "constant": {\n                  "type": "double",\n                  "value": "100000.0"\n                }\n              }\n            ],\n            "levelType": "none",\n            "metric": {\n              "objectId": "4C05177011D3E877C000B3B2D86C964F",\n              "subType": "metric",\n              "name": "Revenue"\n            },\n            "metricFunction": "value",\n            "isIndependent": 0,\n            "nullInclude": 0\n          }\n        }\n      ],\n      "type": "operator"\n    },\n    "tokens": [\n      {\n        "level": "resolved",\n        "state": "initial",\n        "value": "%",\n        "type": "character"\n      },\n      {\n        "level": "resolved",\n        "state": "initial",\n        "value": "Subcategory",\n        "type": "object_reference",\n        "target": {\n          "dateCreated": "2001-01-02T20:48:12.000Z",\n          "dateModified": "2009-02-16T09:58:35.000Z",\n          "versionId": "83FCDB024C4A412A07A3049EC19AE9EC",\n          "primaryLocale": "en-US",\n          "objectId": "8D679D4F11D3E4981000E787EC6DE8A4",\n          "subType": "attribute",\n          "name": "Subcategory"\n        }\n      }\n    ]\n  },\n  "options": {\n    "dataLanguages": {\n      "dataLanguageType": "project_default"\n    },\n    "dataRefresh": "replace",\n    "dataPartition": {\n      "partitionAttribute": {},\n      "numberOfPartitions": 0,\n      "fetchDataSlicesInParallel": false\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Response Code: 200 (The cube\u2019s definition was returned successfully.)"}),"\n",(0,i.jsx)(n.h2,{id:"retrieve-a-cubes-definition-with-filters-custom-expressions-in-tree-and-tokens-formats",children:"Retrieve a cube\u2019s definition with filter\u2019s custom expressions in tree and tokens formats"}),"\n",(0,i.jsx)(t,{since:"2021 Update 5"}),"\n",(0,i.jsxs)(n.p,{children:["In this workflow sample, you want to get the definition cube when its filter contains the custom expression, ",(0,i.jsx)(n.code,{children:"Year, Category Analysis with Custom Expression in Filter"}),", with the expression returned in tree and tokens formats. The object ID of the cube is ",(0,i.jsx)(n.code,{children:"864F3B2D40D0C83EB229D8AA7005CE93"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"If custom expressions are used in a filter, this parameter specifies the format in the which they are returned in the response."}),"\n",(0,i.jsxs)(n.p,{children:["Tokens are a semi-structured representation of MicroStrategy expression text that includes object references. For example, let\u2019s say a filter expression is ",(0,i.jsx)(n.code,{children:"Revenue > Cost"}),". When the filter expression is represented as tokens, the text is broken down into pieces (tokens) with information about what these pieces represent in the metadata: ",(0,i.jsx)(n.code,{children:'("Revenue", Revenue_ID)'}),", ",(0,i.jsx)(n.code,{children:'(">", GreaterThan_ID)'}),", ",(0,i.jsx)(n.code,{children:'("Cost", Cost_ID)'}),"."]}),"\n",(0,i.jsx)(n.p,{children:'A filter\'s "qualification" is presented in the following formats:'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"text"}),": A human-readable, but non-parsable text, describing a filter's qualification."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tree"}),": A tree data structure fully defining the filter's qualification."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tokens"}),": A list of parsed tokens that define a filter's qualification. Note that generating tokens requires additional time."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"showFilterTokens"})," is omitted or false, only ",(0,i.jsx)(n.code,{children:"text"})," and ",(0,i.jsx)(n.code,{children:"tree"})," formats are returned."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"showFilterTokens"})," is true, all ",(0,i.jsx)(n.code,{children:"text"}),", ",(0,i.jsx)(n.code,{children:"tree"}),", and ",(0,i.jsx)(n.code,{children:"tokens"})," formats are returned."]}),"\n",(0,i.jsxs)(n.p,{children:["This workflow is similar to ",(0,i.jsx)(n.a,{href:"#retrieve-a-cubes-definition",children:"Retrieve a cube's definition"}),", except with ",(0,i.jsx)(n.code,{children:"showExpressionAs=tree"})," and ",(0,i.jsx)(n.code,{children:"showExpressionAs=tokens"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Sample Curl:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X GET "https://demo.microstrategy.com/MicroStrategyLibrary/api/model/cubes/864F3B2D40D0C83EB229D8AA7005CE93?showExpressionAs=tokens&showExpressionAs=tree" \\\n-H "accept: application/json" \\\n-H "X-MSTR-AuthToken: cs0intmf1fgij7ao0v2v0j48e5" \\\n-H "X-MSTR-ProjectID: B7CA92F04B9FAE8D941C3E9B7E0CD754"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Sample Response Body:"}),"\n",(0,i.jsxs)(n.p,{children:["You can view the cube\u2019s definition in the body of the response. Notice that",(0,i.jsx)(n.code,{children:"['filter']['tree']['PredicateTree']['expression']"})," contains the fields ",(0,i.jsx)(n.code,{children:"tree"})," and ",(0,i.jsx)(n.code,{children:"tokens"}),", representing the custom expression in tree and tokens format respectively."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "information": {\n    "dateCreated": "2022-03-18T20:16:02.510Z",\n    "dateModified": "2022-03-18T20:38:30.538Z",\n    "versionId": "09702E942147C3639602AC86D7C86E74",\n    "primaryLocale": "en-US",\n    "objectId": "864F3B2D40D0C83EB229D8AA7005CE93",\n    "subType": "report_cube",\n    "name": "Year, Category Analysis with Custom Expression in Filter",\n    "destinationFolderId": "98FE182C2A10427EACE0CD30B6768258"\n  },\n  "template": {\n    "rows": [\n      {\n        "id": "8D679D5111D3E4981000E787EC6DE8A4",\n        "name": "Year",\n        "type": "attribute"\n      },\n      {\n        "id": "8D679D3711D3E4981000E787EC6DE8A4",\n        "name": "Category",\n        "type": "attribute"\n      }\n    ],\n    "columns": [\n      {\n        "type": "metrics",\n        "elements": [\n          {\n            "id": "7FD5B69611D5AC76C000D98A4CC5F24F",\n            "name": "Cost",\n            "subType": "metric"\n          },\n          {\n            "id": "4C051DB611D3E877C000B3B2D86C964F",\n            "name": "Profit",\n            "subType": "metric"\n          }\n        ]\n      }\n    ],\n    "pageBy": []\n  },\n  "filter": {\n    "text": "Cost + 100000 < Revenue",\n    "tree": {\n      "type": "predicate_custom",\n      "predicateId": "7A9C192438CE4C0E83B6298B66437E84",\n      "predicateText": "Cost + 100000 < Revenue",\n      "predicateTree": {\n        "expression": {\n          "text": "Cost + 100000 < Revenue",\n          "tree": {\n            "function": "less",\n            "children": [\n              {\n                "type": "object_reference",\n                "target": {\n                  "objectId": "C742CD9C47AD2991817736AA6E64C291",\n                  "subType": "metric",\n                  "isEmbedded": true\n                },\n                "isIndependent": 0\n              },\n              {\n                "type": "object_reference",\n                "target": {\n                  "objectId": "4C05177011D3E877C000B3B2D86C964F",\n                  "subType": "metric",\n                  "name": "Revenue"\n                },\n                "isIndependent": 0\n              }\n            ],\n            "levelType": "none",\n            "type": "operator"\n          },\n          "tokens": [\n            {\n              "level": "resolved",\n              "state": "initial",\n              "value": "%",\n              "type": "character"\n            },\n            {\n              "level": "resolved",\n              "state": "initial",\n              "value": "Cost",\n              "type": "object_reference",\n              "target": {\n                "dateCreated": "2001-09-18T20:56:27.000Z",\n                "dateModified": "2007-03-04T16:43:16.000Z",\n                "versionId": "1348125140FDF506BD88169D6DBD5271",\n                "primaryLocale": "en-US",\n                "objectId": "7FD5B69611D5AC76C000D98A4CC5F24F",\n                "subType": "metric",\n                "name": "Cost"\n              }\n            },\n            {\n              "level": "resolved",\n              "state": "initial",\n              "value": "+",\n              "type": "character",\n              "target": {\n                "dateCreated": "2001-01-02T20:47:41.000Z",\n                "dateModified": "2021-12-13T04:50:02.461Z",\n                "versionId": "02478D385645D9DE352583B51632FF82",\n                "primaryLocale": "en-US",\n                "objectId": "8107C310DD9911D3B98100C04F2233EA",\n                "subType": "function",\n                "name": "+",\n                "description": "Returns the sum of two values."\n              }\n            },\n            {\n              "level": "resolved",\n              "state": "initial",\n              "value": "100000",\n              "type": "integer"\n            },\n            {\n              "level": "resolved",\n              "state": "initial",\n              "value": "<",\n              "type": "character",\n              "target": {\n                "dateCreated": "2001-01-02T20:47:39.000Z",\n                "dateModified": "2021-12-13T04:50:03.084Z",\n                "versionId": "6934C90E5F46789ACBCE8F87AFA03219",\n                "primaryLocale": "en-US",\n                "objectId": "8107C318DD9911D3B98100C04F2233EA",\n                "subType": "function",\n                "name": "<",\n                "description": "Returns TRUE if the first value is lesser than the second value."\n              }\n            },\n            {\n              "level": "resolved",\n              "state": "initial",\n              "value": "Revenue",\n              "type": "object_reference",\n              "target": {\n                "dateCreated": "2001-01-02T20:42:51.000Z",\n                "dateModified": "2012-05-17T09:01:07.000Z",\n                "versionId": "A1815D9C4F95013B56FD2C8EDD6CB110",\n                "primaryLocale": "en-US",\n                "objectId": "4C05177011D3E877C000B3B2D86C964F",\n                "subType": "metric",\n                "name": "Revenue"\n              }\n            },\n            {\n              "level": "resolved",\n              "state": "initial",\n              "value": "",\n              "type": "end_of_text"\n            }\n          ]\n        }\n      }\n    }\n  },\n  "options": {\n    "dataLanguages": {\n      "dataLanguageType": "project_default"\n    },\n    "dataRefresh": "replace",\n    "dataPartition": {\n      "partitionAttribute": {},\n      "numberOfPartitions": 0,\n      "fetchDataSlicesInParallel": false\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Sample Response Code: 200 (Cube\u2019s definition is returned successfully.)"}),"\n",(0,i.jsx)(n.h2,{id:"retrieve-a-cubes-definition-with-filter-that-contains-inline-custom-expressions-returned-in-tree-and-tokens-formats",children:"Retrieve a cube\u2019s definition with filter that contains inline custom expressions returned in tree and tokens formats"}),"\n",(0,i.jsx)(t,{since:"2021 Update 5"}),"\n",(0,i.jsxs)(n.p,{children:["In this workflow sample, you want to get the cube's definition when its filter contains an inline custom expression, ",(0,i.jsx)(n.code,{children:"Year, Category Analysis with Inline Custom Expression in Filter"}),", with the expression returned in tree and tokens formats. The object ID of the cube is ",(0,i.jsx)(n.code,{children:"57EB0BAB4BC2C8ACB91F0C9845ECF431"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Get the cube filter\u2019s definition with its inline custom expression in tree and tokens format."}),"\n",(0,i.jsx)(n.p,{children:"Sample Curl:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X GET "https://demo.microstrategy.com/MicroStrategyLibrary/api/model/cubes/57EB0BAB4BC2C8ACB91F0C9845ECF431?showExpressionAs=tokens&showExpressionAs=tree" \\\n-H "accept: application/json" \\\n-H "X-MSTR-AuthToken: cs0intmf1fgij7ao0v2v0j48e5" \\\n-H "X-MSTR-ProjectID: B7CA92F04B9FAE8D941C3E9B7E0CD754"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Sample Response Body:"}),"\n",(0,i.jsxs)(n.p,{children:["You can view the cube\u2019s definition in the body of the response. Notice that ",(0,i.jsx)(n.code,{children:"['filter']['tree']['PredicateTree']['expression']"})," contains the fields ",(0,i.jsx)(n.code,{children:"tree"})," and ",(0,i.jsx)(n.code,{children:"tokens"}),", representing the custom expression in tree and tokens format respectively."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "information": {\n    "dateCreated": "2022-03-18T20:13:54.571Z",\n    "dateModified": "2022-03-18T20:45:19.160Z",\n    "versionId": "6998FB78DF457EA8BE2AC891AF70BBAF",\n    "primaryLocale": "en-US",\n    "objectId": "57EB0BAB4BC2C8ACB91F0C9845ECF431",\n    "subType": "report_cube",\n    "name": "02_Year, Category Analysis",\n    "destinationFolderId": "98FE182C2A10427EACE0CD30B6768258"\n  },\n  "template": {\n    "rows": [\n      {\n        "id": "8D679D5111D3E4981000E787EC6DE8A4",\n        "name": "Year",\n        "type": "attribute"\n      },\n      {\n        "id": "8D679D3711D3E4981000E787EC6DE8A4",\n        "name": "Category",\n        "type": "attribute"\n      }\n    ],\n    "columns": [\n      {\n        "type": "metrics",\n        "elements": [\n          {\n            "id": "7FD5B69611D5AC76C000D98A4CC5F24F",\n            "name": "Cost",\n            "subType": "metric"\n          },\n          {\n            "id": "4C051DB611D3E877C000B3B2D86C964F",\n            "name": "Profit",\n            "subType": "metric"\n          }\n        ]\n      }\n    ],\n    "pageBy": []\n  },\n  "filter": {\n    "text": "Revenue > Cost + 100000",\n    "tree": {\n      "type": "predicate_metric_qualification",\n      "predicateId": "3C77F7E14B124765A1991C190AFBB9AE",\n      "predicateText": "Revenue > Cost + 100000",\n      "predicateTree": {\n        "function": "greater",\n        "parameters": [\n          {\n            "parameterType": "expression",\n            "expression": {\n              "text": "Cost + 100000",\n              "tree": {\n                "type": "object_reference",\n                "target": {\n                  "objectId": "7A850AAE42844F20703D778B74557561",\n                  "subType": "metric",\n                  "isEmbedded": true\n                },\n                "isIndependent": 0\n              },\n              "tokens": [\n                {\n                  "level": "resolved",\n                  "state": "initial",\n                  "value": "Cost",\n                  "type": "object_reference",\n                  "target": {\n                    "dateCreated": "2001-09-18T20:56:27.000Z",\n                    "dateModified": "2007-03-04T16:43:16.000Z",\n                    "versionId": "1348125140FDF506BD88169D6DBD5271",\n                    "primaryLocale": "en-US",\n                    "objectId": "7FD5B69611D5AC76C000D98A4CC5F24F",\n                    "subType": "metric",\n                    "name": "Cost"\n                  }\n                },\n                {\n                  "level": "resolved",\n                  "state": "initial",\n                  "value": "+",\n                  "type": "character",\n                  "target": {\n                    "dateCreated": "2001-01-02T20:47:41.000Z",\n                    "dateModified": "2021-12-13T04:50:02.461Z",\n                    "versionId": "02478D385645D9DE352583B51632FF82",\n                    "primaryLocale": "en-US",\n                    "objectId": "8107C310DD9911D3B98100C04F2233EA",\n                    "subType": "function",\n                    "name": "+",\n                    "description": "Returns the sum of two values."\n                  }\n                },\n                {\n                  "level": "resolved",\n                  "state": "initial",\n                  "value": "100000",\n                  "type": "integer"\n                }\n              ]\n            }\n          }\n        ],\n        "levelType": "none",\n        "metric": {\n          "objectId": "4C05177011D3E877C000B3B2D86C964F",\n          "subType": "metric",\n          "name": "Revenue"\n        },\n        "metricFunction": "value",\n        "isIndependent": 0,\n        "nullInclude": 0\n      }\n    }\n  },\n  "options": {\n    "dataLanguages": {\n      "dataLanguageType": "project_default"\n    },\n    "dataRefresh": "replace",\n    "dataPartition": {\n      "partitionAttribute": {},\n      "numberOfPartitions": 0,\n      "fetchDataSlicesInParallel": false\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Sample Response Code: 200 (Cube\u2019s definition is returned successfully.)"}),"\n",(0,i.jsx)(n.h2,{id:"retrieve-a-cube-definition-with-advanced-properties",children:"Retrieve a cube definition with advanced properties"}),"\n",(0,i.jsx)(t,{since:"2021 Update 6"}),"\n",(0,i.jsx)(n.p,{children:"This workflow sample demonstrates how to retrieve the definition of a cube with advanced properties through the Modeling service."}),"\n",(0,i.jsxs)(n.p,{children:["You want to get the definition of the Actual vs Forecast Performance Cube cube object. The object ID of the cube is ",(0,i.jsx)(n.code,{children:"CC02C5C24AE2803ABF14EDA5038159D4"})," in the MicroStrategy Tutorial project. The project ID is ",(0,i.jsx)(n.code,{children:"B7CA92F04B9FAE8D941C3E9B7E0CD754"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["This workflow is similar to ",(0,i.jsx)(n.a,{href:"#retrieve-a-cubes-definition",children:"Retrieve a cube definition"}),", except with ",(0,i.jsx)(n.code,{children:"showAdvancedProperties=true"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Retrieve a cube\u2019s definition using ",(0,i.jsx)(n.a,{href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Cubes/ms-getCube",children:"GET /api/model/cubes/{cubeId}"})," with ",(0,i.jsx)(n.code,{children:"showAdvancedProperties=true"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Sample Curl:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X GET "http://10.23.36.118:8080/MicroStrategyLibrary/api/model/cubes/CC02C5C24AE2803ABF14EDA5038159D4?showAdvancedProperties=true" \\\n-H "accept: application/json" \\\n-H "X-MSTR-AuthToken: fg8fimprk63ige5d83054oopkd" \\\n-H "X-MSTR-ProjectID: B7CA92F04B9FAE8D941C3E9B7E0CD754"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Sample Response Body:"}),"\n",(0,i.jsx)(n.p,{children:"You can view the cube definition in the body of the response. The example below contains VLDB properties, an attribute join type, and a metric join type property."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "information": {\n    "dateCreated": "2009-04-15T20:24:53.000Z",\n    "dateModified": "2010-04-14T15:05:00.000Z",\n    "versionId": "9C75BDF245B413DAEB7681807F6DEEFC",\n    "primaryLocale": "en-US",\n    "objectId": "CC02C5C24AE2803ABF14EDA5038159D4",\n    "subType": "report_cube",\n    "name": "Actual vs Forecast Performance Cube"\n  },\n  "template": {\n    "rows": [\n      {\n        "id": "8D679D4411D3E4981000E787EC6DE8A4",\n        "name": "Month",\n        "type": "attribute"\n      },\n      {\n        "id": "8D679D5111D3E4981000E787EC6DE8A4",\n        "name": "Year",\n        "type": "attribute"\n      }\n    ],\n    "columns": [\n      {\n        "type": "metrics",\n        "elements": [\n          {\n            "id": "4C051DB611D3E877C000B3B2D86C964F",\n            "name": "Profit",\n            "subType": "metric"\n          },\n          {\n            "id": "4C05177011D3E877C000B3B2D86C964F",\n            "name": "Revenue",\n            "subType": "metric"\n          }\n        ]\n      }\n    ],\n    "pageBy": []\n  },\n  "filter": {},\n  "options": {\n    "dataLanguages": {\n      "dataLanguageType": "all_project_data_language"\n    },\n    "dataRefresh": "replace",\n    "dataPartition": {\n      "partitionAttribute": {},\n      "numberOfPartitions": 0,\n      "fetchDataSlicesInParallel": false\n    }\n  },\n  "advancedProperties": {\n    "vldbProperties": {\n      "[AnalyticalEngineProperties].[EvaluationOrdering]": {\n        "name": "EvaluationOrdering",\n        "value": "2",\n        "type": "int32",\n        "resolvedLocation": "default"\n      },\n      "[AnalyticalEngineProperties].[NullCheckingForAnalyticalEngine]": {\n        "name": "NullCheckingForAnalyticalEngine",\n        "value": "2",\n        "type": "int32",\n        "resolvedLocation": "default"\n      }\n    },\n    "metricJoinTypes": {\n      "4C051DB611D3E877C000B3B2D86C964F": {\n        "metric": {\n          "objectId": "4C051DB611D3E877C000B3B2D86C964F",\n          "subType": "metric",\n          "name": "Profit"\n        },\n        "joinType": "inner",\n        "resolvedLocation": "default"\n      },\n      "4C05177011D3E877C000B3B2D86C964F": {\n        "metric": {\n          "objectId": "4C05177011D3E877C000B3B2D86C964F",\n          "subType": "metric",\n          "name": "Revenue"\n        },\n        "joinType": "inner",\n        "resolvedLocation": "default"\n      }\n    },\n    "attributeJoinTypes": {\n      "8D679D4411D3E4981000E787EC6DE8A4": {\n        "attribute": {\n          "objectId": "8D679D4411D3E4981000E787EC6DE8A4",\n          "subType": "attribute",\n          "name": "Month"\n        },\n        "noParticipationInPreserveRow": false,\n        "resolvedLocation": "default"\n      },\n      "8D679D5111D3E4981000E787EC6DE8A4": {\n        "attribute": {\n          "objectId": "8D679D5111D3E4981000E787EC6DE8A4",\n          "subType": "attribute",\n          "name": "Year"\n        },\n        "noParticipationInPreserveRow": false,\n        "resolvedLocation": "default"\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Response Code: 200 (The cube definition is returned successfully.)"}),"\n",(0,i.jsx)(n.h2,{id:"retrieve-applicable-properties-of-a-cube",children:"Retrieve applicable properties of a cube"}),"\n",(0,i.jsx)(t,{since:"2021 Update 6"}),"\n",(0,i.jsx)(n.p,{children:"This workflow sample demonstrates how to retrieve all the applicable properties of a cube through the Modeling service."}),"\n",(0,i.jsxs)(n.p,{children:["You want to get the applicable properties of the Actual vs Forecast Performance Cube cube object. The object ID of the cube is ",(0,i.jsx)(n.code,{children:"CC02C5C24AE2803ABF14EDA5038159D4"})," in the MicroStrategy Tutorial project. The project ID is ",(0,i.jsx)(n.code,{children:"B7CA92F04B9FAE8D941C3E9B7E0CD75"}),"4."]}),"\n",(0,i.jsxs)(n.p,{children:["Retrieve the applicable properties of a cube using ",(0,i.jsx)(n.a,{href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Cubes/ms-getCubeApplicableVldbProperties",children:"GET /api/model/cubes/{cubeId}/applicableVldbProperties"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Sample Curl:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X GET "http://10.23.33.10:8080/MicroStrategyLibrary/api/model/cubes/CC02C5C24AE2803ABF14EDA5038159D4/applicableVldbProperties" \\\n-H "accept: application/json" \\\n-H "X-MSTR-AuthToken: j1h84f3jj21u26m8jb700qn82g" \\\n-H "X-MSTR-ProjectID: 6F2026DB4172DC4B219ADC914FF944BB"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Sample Response Body:"}),"\n",(0,i.jsx)(n.p,{children:"You can view the cube definition in the body of the response. The example below contains VLDB properties, an attribute join type, and a metric join type property."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "propertyCount": 156,\n  "applicableProperties": {\n    "[VLDB Select].[Allow Cartesian Join]": {\n      "name": "Allow Cartesian Join",\n      "groupId": 1,\n      "groupName": "Joins",\n      "maxValue": 2,\n      "displayType": "options",\n      "displayName": "Cartesian Join Governing",\n      "showSqlPreview": true,\n      "options": [\n        {\n          "value": "Choosing this option keeps the backward compatibility with MicroStrategy 2019 where SQL queries are governed by \\"Cartesian Join Warning\\" VLDB setting.",\n          "sqlPreview": "OBSOLETE - Keep backward compatibility with MicroStrategy 2019."\n        },\n        {\n          "value": "Cancel execution of cartesian join for SQL, MDX, In-Memory queries.",\n          "sqlPreview": "<font face=\\"Times Roman\\" size=\\"3\\"><dt><b>Note: This VLDB setting only works for Data Engine Version 2020 or above. Please click <a href=\\"https://www2.microstrategy.com/producthelp/Current/UpgradeGuide/en-us/Content/analytical_engine_version.htm\\"  target=\\"_blank\\">here</a> to know how to change the Data Engine Version.</b></dt><br/><dt>Choosing this option disallows cross join execution for SQL, MDX and In-Memory queries.</dt><br/><dt>This option overrides existing \\"Cartesian Join Warning\\" VLDB setting.</dt></font>"\n        },\n        {\n          "value": "Execute cartesian join for SQL, MDX, In-Memory queries.",\n          "sqlPreview": "<font face=\\"Times Roman\\" size=\\"3\\"><dt><b>Note: This VLDB setting only works for Data Engine Version 2020 or above. Please click <a href=\\"https://www2.microstrategy.com/producthelp/Current/UpgradeGuide/en-us/Content/analytical_engine_version.htm\\"  target=\\"_blank\\">here</a> to know how to change the Data Engine Version.</b></dt><br/><dt>Choosing this option allows cross join execution for SQL, MDX and In-Memory queries.</dt><br/><dt>This option overrides existing \\"Cartesian Join Warning\\" VLDB setting.</dt></font>"\n        }\n      ],\n      "type": "int32",\n      "defaultValue": 0\n    },\n    "[VLDB Select].[Base Table Join for Template]": {\n      "name": "Base Table Join for Template",\n      "groupId": 1,\n      "groupName": "Joins",\n      "maxValue": 1,\n      "displayType": "options",\n      "displayName": "Base Table Join for Template",\n      "showSqlPreview": true,\n      "options": [\n        {\n          "value": "Temp table join",\n          "sqlPreview": "\\n      \\n        create table TEMP1 as\\n        select a21.DEPARTMENT_NBR DEPARTMENT_NBR,\\n        \\ta21.MARKET_NBR MARKET_NBR,\\n         \\tsum(a21.COST_AMT) WJXBFS1\\n        from COST_MARKET_DEP a21\\n         \\tjoin LOOKUP_DAY a22\\n         \\ton (a21.CUR_TRN_DT = a22.CUR_TRN_DT)\\n        where a22.MONTH_ID = 199411\\n        group by a21.DEPARTMENT_NBR, a21.MARKET_NBR\\n          \\n        create table TEMP2 as\\n        select a21.DEPARTMENT_NBR DEPARTMENT_NBR,\\n         \\ta21.MARKET_NBR MARKET_NBR,\\n         \\tsum(a21.TOT_SLS_DLR) WJXBFS1,\\n         \\tsum(a21.TOT_SLS_DLR) WJXBFS2\\n        from MARKET_DEPARTMENT a21\\n         \\tjoin LOOKUP_DAY a22\\n         \\ton (a21.CUR_TRN_DT = a22.CUR_TRN_DT)\\n        where a22.MONTH_ID = 199411\\n        group by a21.DEPARTMENT_NBR,\\n         \\ta21.MARKET_NBR\\n          \\n        select a21.MARKET_NBR MARKET_NBR,\\n         \\ta21.DEPARTMENT_NBR DEPARTMENT_NBR,\\n         \\t((a22.WJXBFS1 - a21.WJXBFS1) / a22.WJXBFS2) WJXBFS1\\n        from TEMP1 a21\\n         \\tjoin TEMP2 a22\\n         \\ton (a21.DEPARTMENT_NBR = a22.DEPARTMENT_NBR and\\n         \\t    a21.MARKET_NBR = a22.MARKET_NBR)\\n      \\n    "\n        },\n        {\n          "value": "Fact table join",\n          "sqlPreview": "\\n      \\n        select a21.MARKET_NBR MARKET_NBR, \\n         \\ta21.DEPARTMENT_NBR DEPARTMENT_NBR, \\n         \\t((sum(a22.TOT_SLS_DLR) - sum(a21.COST_AMT)) / sum(a22.TOT_SLS_DLR)) WJXBFS1\\n        from COST_MARKET_DEP a21\\n         \\tjoin MARKET_DEPARTMENT a22\\n         \\ton (a21.CUR_TRN_DT = a22.CUR_TRN_DT and\\n         \\t\\ta21.DEPARTMENT_NBR = a22.DEPARTMENT_NBR and\\n         \\t\\ta21.MARKET_NBR = a22.MARKET_NBR)\\n         \\tjoin LOOKUP_DAY  a23\\n         \\ton (a21.CUR_TRN_DT = a23.CUR_TRN_DT)\\n        where a23.MONTH_ID = 199411\\n        group by a21.MARKET_NBR,\\n         \\ta21.DEPARTMENT_NBR \\n      \\n    "\n        }\n      ],\n      "type": "int32",\n      "defaultValue": 0\n    }\n  },\n  "sqlDynamicPreview": "[VLDB Report].[Report PreStatement 1]\\n[VLDB Report].[Report PreStatement 2]\\n[VLDB Report].[Report PreStatement 3]\\n[VLDB Report].[Report PreStatement 4]\\n[VLDB Report].[Report PreStatement 5]\\n\\n[VLDB Create].[Table PreStatement 1]\\n[VLDB Create].[Table PreStatement 2]\\n[VLDB Create].[Table PreStatement 3]\\n[VLDB Create].[Table PreStatement 4]\\n[VLDB Create].[Table PreStatement 5]\\n\\ncreate [VLDB Create].[Table Qualifier] table [VLDB Create].[Table Descriptor] [VLDB Create].[Table Prefix] TABLENAME [VLDB Create].[Table Option] (ATTRIBUTE_COL1 VARCHAR(20) [VLDB Create].[Attribute ID Constraint] , FORM_COL2 CHAR(20), [Attribute non-ID Constraint] FACT_COL3 FLOAT) [VLDB Create].[Table Space]\\nprimary index (ATTRIBUTE_COL1, FORM_COL2) [VLDB Create].[Create PostString]\\n\\n[VLDB Insert].[Insert PreStatement 1]\\n[VLDB Insert].[Insert PreStatement 2]\\n[VLDB Insert].[Insert PreStatement 3]\\n[VLDB Insert].[Insert PreStatement 4]\\n[VLDB Insert].[Insert PreStatement 5]\\n\\n[VLDB Insert].[Bulk Insert String] insert into TABLENAME [VLDB Insert].[Insert Table Option] select [VLDB Select].[SQL Hint] A1.COL1 [VLDB Syntax].[Mid Name Alias Pattern] COLUMN1ALIAS, A2.COL2 [VLDB Syntax].[Mid Name Alias Pattern] COLUMN2ALIAS, A3.COL3 [VLDB Syntax].[Mid Name Alias Pattern] COLUMN3ALIAS from TABLE1 A1, TABLE2 A2, TABLE3 A3 where A1.COL1 = A2.COL1 and A2.COL4=A3.COL5 [VLDB Insert].[Post Insert String]\\n\\n[VLDB Insert].[Insert MidStatement 1]\\n[VLDB Insert].[Insert MidStatement 2]\\n[VLDB Insert].[Insert MidStatement 3]\\n[VLDB Insert].[Insert MidStatement 4]\\n[VLDB Insert].[Insert MidStatement 5]\\n\\n[VLDB Insert].[Bulk Insert String] insert into TABLENAME [VLDB Insert].[Insert Table Option] select [VLDB Select].[SQL Hint] A1.COL1 [VLDB Syntax].[Mid Name Alias Pattern] COLUMN1ALIAS, A2.COL2 [VLDB Syntax].[Mid Name Alias Pattern] COLUMN2ALIAS, A3.COL3 [VLDB Syntax].[Mid Name Alias Pattern] COLUMN3ALIAS from TABLE4 A1, TABLE5 A2, TABLE6 A3 where A1.COL1 = A2.COL1 and A2.COL4=A3.COL5 [VLDB Insert].[Post Insert String]\\n\\n[VLDB Insert].[Insert PostStatement 1]\\n[VLDB Insert].[Insert PostStatement 2]\\n[VLDB Insert].[Insert PostStatement 3]\\n[VLDB Insert].[Insert PostStatement 4]\\n[VLDB Insert].[Insert PostStatement 5]\\n\\ncreate [VLDB Create].[Index Qualifier] index [VLDB Create].[Index Prefix] IDX_TEMP1(STORE_ID, STORE_DESC) [VLDB Create].[Index PostString]\\n\\n[VLDB Create].[Table PostStatement 1]\\n[VLDB Create].[Table PostStatement 2]\\n[VLDB Create].[Table PostStatement 3]\\n[VLDB Create].[Table PostStatement 4]\\n[VLDB Create].[Table PostStatement 5]\\n\\nselect [VLDB Select].[SQL Hint] A1.STORE_NBR [VLDB Syntax].[Mid Name Alias Pattern] STORE_NBR, max(A1.STORE_DESC) [VLDB Syntax].[Mid Name Alias Pattern] METRICALIAS from LOOKUP_STORE A1 A1.STORE_NBR = 1 group by A1.STORE_NBR [VLDB Select].[SELECT PostString]\\n\\n[VLDB Report].[Report PostStatement 1]\\n[VLDB Report].[Report PostStatement 2]\\n[VLDB Report].[Report PostStatement 3]\\n[VLDB Report].[Report PostStatement 4]\\n[VLDB Report].[Report PostStatement 5]\\n[Drop Table PreStatement 1]\\n\\ndrop table TABLENAME\\n\\n[Drop Table PostStatement 1]\\n[VLDB Drop].[Post Cleanup Statement 1]\\n[VLDB Drop].[Post Cleanup Statement 2]\\n[VLDB Drop].[Post Cleanup Statement 3]\\n[VLDB Drop].[Post Cleanup Statement 4]\\n[VLDB Drop].[Post Cleanup Statement 5]"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Response Code: 200 (The list of applicable properties for a given object is returned successfully.)"})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var i=t(96540);const r={},a=i.createContext(r);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);