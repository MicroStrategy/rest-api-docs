"use strict";(self.webpackChunkrest_api_docs=self.webpackChunkrest_api_docs||[]).push([[6591],{3905:function(e,r,t){t.d(r,{Zo:function(){return l},kt:function(){return u}});var i=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,i,n=function(e,r){if(null==e)return{};var t,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var d=i.createContext({}),p=function(e){var r=i.useContext(d),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},l=function(e){var r=p(e.components);return i.createElement(d.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},m=i.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,d=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=p(t),u=n,f=m["".concat(d,".").concat(u)]||m[u]||c[u]||o;return t?i.createElement(f,a(a({ref:r},l),{},{components:t})):i.createElement(f,a({ref:r},l))}));function u(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,a=new Array(o);a[0]=m;var s={};for(var d in r)hasOwnProperty.call(r,d)&&(s[d]=r[d]);s.originalType=e,s.mdxType="string"==typeof e?e:n,a[1]=s;for(var p=2;p<o;p++)a[p]=t[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},54427:function(e,r,t){t.r(r),t.d(r,{assets:function(){return c},contentTitle:function(){return p},default:function(){return v},frontMatter:function(){return d},metadata:function(){return l},toc:function(){return m}});var i,n=t(83117),o=t(80102),a=(t(67294),t(3905)),s=["components"],d={title:"Workflow sample - Retrieve a driver's definition",sidebar_label:"Retrieve a driver's definition",description:"This workflow sample demonstrates how to retrieve a driver's definition in metadata."},p=void 0,l={unversionedId:"common-workflows/administration/manage-drivers/retrieve-a-driver-definition",id:"common-workflows/administration/manage-drivers/retrieve-a-driver-definition",title:"Workflow sample - Retrieve a driver's definition",description:"This workflow sample demonstrates how to retrieve a driver's definition in metadata.",source:"@site/docs/common-workflows/administration/manage-drivers/retrieve-a-driver-definition.md",sourceDirName:"common-workflows/administration/manage-drivers",slug:"/common-workflows/administration/manage-drivers/retrieve-a-driver-definition",permalink:"/rest-api-docs/common-workflows/administration/manage-drivers/retrieve-a-driver-definition",draft:!1,editUrl:"https://github.com/MicroStrategy/rest-api-docs/tree/public/docs/common-workflows/administration/manage-drivers/retrieve-a-driver-definition.md",tags:[],version:"current",lastUpdatedBy:"xdumstr",lastUpdatedAt:1678730015,formattedLastUpdatedAt:"Mar 13, 2023",frontMatter:{title:"Workflow sample - Retrieve a driver's definition",sidebar_label:"Retrieve a driver's definition",description:"This workflow sample demonstrates how to retrieve a driver's definition in metadata."},sidebar:"tutorialSidebar",previous:{title:"Retrieve all drivers' definitions",permalink:"/rest-api-docs/common-workflows/administration/manage-drivers/retrieve-drivers"},next:{title:"Update a driver's definition",permalink:"/rest-api-docs/common-workflows/administration/manage-drivers/update-a-driver-definition"}},c={},m=[{value:"Retrieve a driver&#39;s definition GET /api/drivers/{id}",id:"retrieve-a-drivers-definition-get-apidriversid",level:2}],u=(i="Available",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)}),f={toc:m};function v(e){var r=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},f,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)(u,{since:"2021 Update 9",mdxType:"Available"}),(0,a.kt)("p",null,"This workflow sample demonstrates how to retrieve a driver's definition in metadata."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Obtain the authorization token needed to execute the request using ",(0,a.kt)("a",{parentName:"p",href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Authentication/postLogin"},"POST /api/auth/login"),"."),(0,a.kt)("p",{parentName:"admonition"},"Obtain the driver's ID needed to execute the request using ",(0,a.kt)("a",{parentName:"p",href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Drivers/getDrivers_1"},"GET /api/drivers"),".")),(0,a.kt)("h2",{id:"retrieve-a-drivers-definition-get-apidriversid"},"Retrieve a driver's definition ",(0,a.kt)("a",{parentName:"h2",href:"https://demo.microstrategy.com/MicroStrategyLibrary/api-docs/index.html#/Drivers/getDriverById"},"GET /api/drivers/{id}")),(0,a.kt)("p",null,"Sample Request Header:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-http"},'"accept": "application/json"\n"X-MSTR-AuthToken": "pisu5dkkutqfblaamdomgr00ch"\n')),(0,a.kt)("p",null,"Sample Request Body: Empty"),(0,a.kt)("p",null,"Sample Curl:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X "GET" \\\n  "http://demo.microstrategy.com/MicroStrategyLibrary/api/drivers/7358B0B8264A4B6198520B2BC0B6248B" \\\n  -H "accept: application/json" \\\n  -H "X-MSTR-AuthToken: pisu5dkkutqfblaamdomgr00ch"\n')),(0,a.kt)("p",null,"Sample Response Body:"),(0,a.kt)("p",null,"You can get a driver's definition in the body of the response."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "enabled": true,\n  "id": "7358B0B8264A4B6198520B2BC0B6248B",\n  "isODBC": false,\n  "name": "com.microstrategy.jdbc.db2.TestDriver"\n}\n')),(0,a.kt)("p",null,"Sample Response Code: 200"))}v.isMDXComponent=!0}}]);